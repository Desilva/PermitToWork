@using PermitToWork.Models.Ptw
@model PtwEntity
@{
    string position = ViewBag.position as String;
    int isPosition = position == "Create" ? 1 : 0;
    var requestor = Session["user"] as PermitToWork.Models.User.UserEntity;
    var listUser = ViewBag.listUser as PermitToWork.Models.User.ListUser;
    List<bool?> user_ptw = new List<bool?>();
    user_ptw.Add(ViewBag.isRequestor as bool?);
    user_ptw.Add(ViewBag.isAccSupervisor as bool?);
    user_ptw.Add(ViewBag.isAccAssessor as bool?);
    user_ptw.Add(ViewBag.isAccFO as bool?);
    user_ptw.Add(ViewBag.isCanSupervisor as bool?);
    user_ptw.Add(ViewBag.isCanAssessor as bool?);
    user_ptw.Add(ViewBag.isCanFO as bool?);
    bool? isClearenceComplete = ViewBag.isClearenceComplete as bool?;
    bool? isClearenceClose = ViewBag.isClearenceClose as bool?;
    bool? isCancel = ViewBag.isCancel as bool?;
    bool? isCanEdit = ViewBag.isCanEdit as bool?;
    if (isCanEdit == null) {
        isCanEdit = true;
    }
    List<PermitToWork.Models.Master.MstFOEntity> list_fo = ViewBag.listFO as List<PermitToWork.Models.Master.MstFOEntity>;
    List<PermitToWork.Models.Master.MstAssessorEntity> list_assessor = ViewBag.listAssessor as List<PermitToWork.Models.Master.MstAssessorEntity>;
    List<PermitToWork.Models.User.UserEntity> listSpv = ViewBag.supervisor as List<PermitToWork.Models.User.UserEntity>;
}
<script id="checkbox-template" type="text/kendo-ui-template">
            # if ('@Model.hira_docs'.indexOf(item.id.split('#')[1]) >= 0) { #
                <input type='checkboxes' name='checkedItems' value='true' checked='true' /> 
            # } else { #
                <input type='checkboxes' name='checkedItems' value='true' /> 
            # } #
</script>
<script>
    var KBP = "@Model.ptw_no.Split('-')[0]";
    var checkedNodes = '@Model.hira_docs'.split('#@@#');
    // checkedNodes.push('Upload/Hira/SPE/SPE-SafetyHIRA-001 Brine Injection System R02-090713.pdf');
    $(document).ready(function () {
        // addHandlerMenu();

        $('#InputExtensionPtw').css('display', 'none');
        $('#area').css('display', 'none');

        if($('#extendPtw1').is(':checked')){
            $('#InputExtensionPtw').css('display','block');
        }else{
            $('#InputExtensionPtw').css('display','none');
        }

        $('input[name = "area"]').change(function () {
            if (($(this).val() == 0)) {
                $('#area').css('display', 'block');
            } else {
                $('#area').css('display', 'none');
            }
        });

        function startChange() {
            var startDate = start.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                //end.min(startDate);
                //end.max(addDays(startDate, 7));
                startDate.setHours(19);
                end.value(addDays(startDate, 6));
            }
        }

        function endChange() {
            var endDate = end.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                //start.max(endDate);
            }
        }

        var start = $("#proposed_period_start").kendoDateTimePicker({
            change: startChange,
            parseFormats: ["MM/dd/yyyy"]
        }).data("kendoDateTimePicker");

        var end = $("#proposed_period_end").kendoDateTimePicker({
            change: endChange,
            parseFormats: ["MM/dd/yyyy"]
        }).data("kendoDateTimePicker");

        //start.max(end.value());
        //end.min(start.value());


        $("#files").kendoUpload({
            multiple: true,
            async: {
                saveUrl: "@Url.Action("save","Hira")",
                removeUrl: "Hira/Remove",
                autoUpload: true
            },
            upload: onUpload,
            success: onSuccess,
            showFileList: false
        });

        $("#acc_images_uploader").kendoUpload({
            multiple: false,
            async: {
                saveUrl: "@Url.Action("saveImage","Ptw")",
                autoUpload: true
            },
            upload: onUploadImage,
            success: onSuccessImage,
            showFileList: false
        });

        function startChangeValidity() {
            var startDate = startValidity.value();
            var now = new Date();
            now.setHours(0, 0, 0);
            if (startDate >= now) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                endValidity.min(startDate);
                endValidity.max(addDays(startDate, 6));
                startDate.setHours(19);
                endValidity.value(addDays(startDate, 6));
            } else {
                alert("Validity Date Start can not before today.");
            }
        }

        function endChangeValidity() {
            var endDate = endValidity.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                //startValidity.max(endDate);
            }
        }

        var startValidity = $("#validity_period_start").kendoDatePicker({
            change: startChangeValidity,
            parseFormats: ["MM/dd/yyyy"]
        }).data("kendoDatePicker");

        var endValidity = $("#validity_period_end").kendoDatePicker({
            change: endChangeValidity,
            parseFormats: ["MM/dd/yyyy"]
        }).data("kendoDatePicker");

        function addDays(myDate, days) {
            return new Date(myDate.getTime() + days * 24 * 60 * 60 * 1000);
        }


        if (endValidity != undefined || startValidity != undefined) {
            endValidity.min(startValidity.value());
            endValidity.max(addDays(new Date(startValidity.value()),7));
        }

        $("#cancellation_date").kendoDatePicker().data("kendoDatePicker");

        //checkbox
        $('#loto_id').click(function () {
            console.log($(this).attr('data-id'));
            //if ($(this).attr('data-id') == "") {
            //    $('#loto-new').modal('show');
            //} else {
                $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
                changeContent('@Url.Action("Index","Loto", new { id = Model.id })');
            //}
            //changeContent('loto/create');
        })
        $('#csep_id').click(function () {
            $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
            changeContent('@Url.Action("Edit","Csep")/' + $(this).attr('data-id'));
        })
        $('#hw_id').click(function () {
            $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
            changeContent('@Url.Action("Edit","Hw")/' + $(this).attr('data-id'));
        })
        $('#fi_id').click(function () {
            //changeContent('fi/create');
            $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
            changeContent('@Url.Action("Edit","Fi")/' + $(this).attr('data-id'));
        })
        $('#ex_id').click(function () {
            //changeContent('ex/create');
            $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
            changeContent('@Url.Action("Edit","Excavation")/' + $(this).attr('data-id'));
        })
        $('#wh_id').click(function () {
            $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
            changeContent('@Url.Action("Edit","WorkingHeight")/' + $(this).attr('data-id'));
        })
        $('#rad_id').click(function () {
            $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
            changeContent('@Url.Action("Edit","Radiography")/' + $(this).attr('data-id'));
        });

        $('#dept_requestor').change(function () {
            $.post('@Url.Action("GetSpvList", "Ptw")', { deptId : $(this).val(), ptwRequestor : '@(Model.acc_ptw_requestor != null ? (Model.is_guest != 1 ? Model.acc_ptw_requestor : "0") : "")' }, function (resp) {
                $('#acc_supervisor').html('<option value="">Choose One</option>');
                for (var i in resp) {
                    $('#acc_supervisor').append('<option value="' + resp[i].id + '">' + resp[i].alpha_name + '</option>');
                }
            });
        });

        $('#requestor_acc').click(function () {
            values = getValues();
            if (validate(values)) {

                var values = {
                    id: '@Model.id',
                    user_id: '@requestor.id',
                };
                $('#requestor_acc').attr('disabled', 'disabled');
                $('#loading_requestor_acc').show();
                $.post("@Url.Action("RequestorAcc","Ptw")", values, function (resp) {
                    if (resp.status == "200" || resp.status == "201") {
                        save();
                    } else if (resp.status == "400") {
                        $('#requestor_acc').removeAttr('disabled');
                        $('#loading_requestor_acc').hide();
                        alert("Failed to approve Permit To Work.");
                    } else if (resp.status == "404") {
                        $('#requestor_acc').removeAttr('disabled');
                        $('#loading_requestor_acc').hide();
                        alert("Failed to approve Permit to Work. Are you trying something not your access?");
                    }
                });
            }
        });

        $('#supervisor_acc').click(function () {
            var values = getValues();
            if (!validate(values)) {
                return;
            }
            var values = {
                id: '@Model.id',
                user_id: '@requestor.id',
                assessor_id: $('#acc_assessor').val(),
            };
            
            if (($('#pre_job_1_spv').val() == "2" || $('#pre_job_2_spv').val() == "2" || $('#pre_job_3_spv').val() == "2" ||
            $('#pre_job_4_spv').val() == "2" || $('#pre_job_5_spv').val() == "2" || $('#pre_job_6_spv').val() == "2" ||
            $('#pre_job_7_spv').val() == "2") && ($('#pre_job_notes').val().indexOf("Spv:") < 0)) {
                $('#pre_job_notes_required').show();
                $('#pre_job_notes_required').html('Notes must be added. Start with \'Spv:\'');
                alert('Screening contains one or more \'no\'. Please add Notes start with \'Spv:');
            } else {

                //if (values.pre_job_1_fo == "2" || values.pre_job_2_fo == "2" || values.pre_job_3_fo == "2" ||
                //    values.pre_job_4_fo == "2" || values.pre_job_5_fo == "2" || values.pre_job_6_fo == "2" ||
                //    values.pre_job_7_fo == "2") {
                //    if (values.pre_job_notes.indexOf("FO:") < 0) {
                //        $('#pre_job_notes_required').show();
                //        $('#pre_job_notes_required').html('Comment must be added. Start with \'FO:\'');
                //        alert('Screening contains one or more \'no\'. Please add Notes start with \'FO:');
                //    }
                //}
                var val = getValues();
                var r = true;
                if (val.pre_job_1_spv == "0" && val.pre_job_2_spv == "0" && val.pre_job_3_spv == "0" && val.pre_job_4_spv == "0" &&
                    val.pre_job_5_spv == "0" && val.pre_job_6_spv == "0" && val.pre_job_7_spv == "0") {
                    r = confirm("Are you sure that all pre job screening values are 'N/A'? Please change the value if it's not true.");
                }
                if (r) {
                    $('#supervisor_acc').attr('disabled', 'disabled');
                    $('#loading_supervisor_acc').show();
                    $.post("@Url.Action("SupervisorAcc","Ptw")", values, function (resp) {
                        if (resp.status == "200" || resp.status == "201") {
                            save(true);
                        } else if (resp.status == "400") {
                            $('#supervisor_acc').removeAttr('disabled');
                            $('#loading_supervisor_acc').hide();
                            alert("Failed to approve Permit To Work.");
                        } else if (resp.status == "404") {
                            $('#supervisor_acc').removeAttr('disabled');
                            $('#loading_supervisor_acc').hide();
                            alert("Failed to approve Permit to Work. Are you trying something not your access?");
                        } else if (resp.status == "401") {
                            $('#supervisor_acc').removeAttr('disabled');
                            $('#loading_supervisor_acc').hide();
                            alert("Failed to approve Permit to Work. You must choose Assessor.");
                        }
                    });
                }
            }
        });

        $('#supervisor_reject').click(function () {
            $('#type_reject').val(1);
            $('#rejection').modal('show');
        });

        $('#assessor_reject').click(function () {
            $('#type_reject').val(2);
            $('#rejection').modal('show');
        });

        $('#fo_reject').click(function () {
            $('#type_reject').val(3);
            $('#rejection').modal('show');
        });

        $('#supervisor_reject_can').click(function () {
            $('#type_reject').val(4);
            $('#rejection').modal('show');
        });

        $('#assessor_reject_can').click(function () {
            $('#type_reject').val(5);
            $('#rejection').modal('show');
        });

        $('#fo_reject_can').click(function () {
            $('#type_reject').val(6);
            $('#rejection').modal('show');
        });

        $('#reject_button').click(function () {
            var type = $('#type_reject').val();
            var url = '';
            var comment = $('#comment').val();
            switch (type) {
                case '1': url = '@Url.Action("SupervisorAccReject","Ptw")'; break;
                case '2': url = '@Url.Action("AssessorAccReject","Ptw")'; break;
                case '3': url = '@Url.Action("FOAccReject","Ptw")'; break;
                case '4': url = '@Url.Action("SupervisorCanReject","Ptw")'; break;
                case '5': url = '@Url.Action("AssessorCanReject","Ptw")'; break;
                case '6': url = '@Url.Action("FOCanReject","Ptw")'; break;
            };
            var values = {
                id: '@Model.id',
                user_id: '@requestor.id',
                comment: comment,
            };
            $('#reject_button').attr('disabled', 'disabled');
            $('#loading_reject').show();
            $.post(url, values, function (resp) {
                if (resp.status == "200") {
                    $('#rejection').modal('hide');
                    save(true);
                } else if (resp.status == "400") {
                    $('#rejection').modal('hide');
                    $('#reject_button').removeAttr('disabled');
                    $('#loading_reject').hide();
                    alert("Failed to reject Permit To Work.");
                } else if (resp.status == "404") {
                    $('#rejection').modal('hide');
                    $('#reject_button').removeAttr('disabled');
                    $('#loading_reject').hide();
                    alert("Failed to reject Permit to Work. Are you trying something not your access?");
                }
            });
        });



        $('#assessor_acc').click(function () {
            $('#type_accrej').val('0');
            $('#comment_assessor').modal('show');
        });

        $('#assessor_acc_rej').click(function () {
            var i = $('#type_accrej').val();
            if (i == 0) {
                var values = {
                    id: '@Model.id',
                    user_id: '@requestor.id',
                    comment: $('#comment_ass').val(),
                };
                $('#assessor_acc_rej').attr('disabled', 'disabled');
                $('#loading_ass_acc_rej').show();
                $.post("@Url.Action("AssessorAcc","Ptw")", values, function (resp) {
                    if (resp.status == "200" || resp.status == "201") {
                        $('#comment_ass').val('');
                        $('#comment_assessor').modal('hide');
                        save(true);
                    } else if (resp.status == "400") {
                        $('#assessor_acc_rej').removeAttr('disabled');
                        $('#loading_ass_acc_rej').hide();
                        alert("Failed to approve Permit To Work.");
                    } else if (resp.status == "404") {
                        $('#assessor_acc_rej').removeAttr('disabled');
                        $('#loading_ass_acc_rej').hide();
                        alert("Failed to approve Permit to Work. Are you trying something not your access?");
                    }
                });
            } else if (i == 1) {
                var values = {
                    id: '@Model.id',
                    user_id: '@requestor.id',
                    comment: $('#comment_ass').val(),
                };
                $('#assessor_acc_rej').attr('disabled', 'disabled');
                $('#loading_ass_acc_rej').show();
                $.post("@Url.Action("AssessorCan","Ptw")", values, function (resp) {
                    if (resp.status == "200" || resp.status == "201") {
                        $('#comment_ass').val('');
                        $('#comment_assessor').modal('hide');
                        save(true);
                    } else if (resp.status == "400") {
                        $('#assessor_acc_rej').removeAttr('disabled');
                        $('#loading_ass_acc_rej').hide();
                        alert("Failed to approve Cancellation Permit To Work.");
                    } else if (resp.status == "404") {
                        $('#assessor_acc_rej').removeAttr('disabled');
                        $('#loading_ass_acc_rej').hide();
                        alert("Failed to approve Cancellation Permit to Work. Are you trying something not your access?");
                    } else if (resp.status == "401") {
                        $('#assessor_acc_rej').removeAttr('disabled');
                        $('#loading_ass_acc_rej').hide();
                        alert("Failed to approve Cancellation Permit to Work. You must choose Facility Owner.");
                    }
                });
            }
        });

        $('#fo_acc').click(function () {
            var values = {
                id: '@Model.id',
                user_id: '@requestor.id'
            };

            if (($('#pre_job_1_fo').val() == "2" || $('#pre_job_2_fo').val() == "2" || $('#pre_job_3_fo').val() == "2" ||
            $('#pre_job_4_fo').val() == "2" || $('#pre_job_5_fo').val() == "2" || $('#pre_job_6_fo').val() == "2" ||
            $('#pre_job_7_fo').val() == "2") && ($('#pre_job_notes').val().indexOf("FO:") < 0)) {
                $('#pre_job_notes_required').show();
                $('#pre_job_notes_required').html('Notes must be added. Start with \'FO:\'');
                alert('Screening contains one or more \'no\'. Please add Notes start with \'FO:');
            } else {
                var val = getValues();
                var r = true;
                var s = true;
                if (val.pre_job_1_fo == "0" && val.pre_job_2_fo == "0" && val.pre_job_3_fo == "0" && val.pre_job_4_fo == "0" &&
                    val.pre_job_5_fo == "0" && val.pre_job_6_fo == "0" && val.pre_job_7_fo == "0") {
                    r = confirm("Are you sure that all pre job screening values are 'N/A'? Please change the value if it's not true.");
                }

                if (r && val.validity_period_start == val.proposed_period_start.split(' ')[0] &&
                    val.validity_period_end == val.proposed_period_end.split(' ')[0]) {
                    s = confirm("Are you sure that the \"validity period\" is the same as the \"proposed period\"?");
                }

                if (r && s) {
                    $('#fo_acc').attr('disabled', 'disabled');
                    $('#loading_fo_acc').show();
                    $.post("@Url.Action("FOAcc","Ptw")", values, function (resp) {
                        if (resp.status == "200" || resp.status == "201") {
                            save(true);
                        } else if (resp.status == "400") {
                            $('#fo_acc').removeAttr('disabled');
                            $('#loading_fo_acc').hide();
                            alert("Failed to approve Permit To Work.");
                        } else if (resp.status == "404") {
                            $('#fo_acc').removeAttr('disabled');
                            $('#loading_fo_acc').hide();
                            alert("Failed to approve Permit to Work. Are you trying something not your access?");
                        }
                    });
                } else {
                    if (!s) {
                        $('#validity_period_start').focus();
                    }

                    if (!r) {
                        $('#pre_job_4_fo').focus();
                    }
                }
            }
        });

        $('#requestor_can').click(function () {
            var values = {
                id: '@Model.id',
                user_id: '@requestor.id',
            };
            $('#requestor_can').attr('disabled', 'disabled');
            $('#loading_requestor_can').show();
            $.post("@Url.Action("RequestorCan","Ptw")", values, function (resp) {
                if (resp.status == "200" || resp.status == "201") {
                    save(true);
                } else if (resp.status == "400") {
                    $('#requestor_can').removeAttr('disabled');
                    $('#loading_requestor_can').hide();
                    alert("Failed to approve Cancellation Permit To Work.");
                } else if (resp.status == "404") {
                    $('#requestor_can').removeAttr('disabled');
                    $('#loading_requestor_can').hide();
                    alert("Failed to approve Cancellation Permit to Work. Are you trying something not your access?");
                }
            });
        });

        $('#supervisor_can').click(function () {
            var values = {
                id: '@Model.id',
                user_id: '@requestor.id'
            };
            if (($('#cancel_1_spv').val() == "2" || $('#cancel_2_spv').val() == "2" || $('#cancel_3_spv').val() == "2" ||
            $('#cancel_4_spv').val() == "2" || $('#cancel_5_spv').val() == "2" || $('#cancel_6_spv').val() == "2" ||
            $('#cancel_7_spv').val() == "2") && ($('#cancel_notes').val().indexOf("Spv:") < 0)) {
                $('#cancel_notes_required').show();
                $('#cancel_notes_required').html('Notes must be added. Start with \'Spv:\'');
                alert('Screening contains one or more \'no\'. Please add Notes start with \'Spv:');
            } else {
                var val = getValues();
                var r = true;
                if (val.cancel_1_spv == "0" && val.cancel_2_spv == "0" && val.cancel_3_spv == "0" && val.cancel_4_spv == "0" &&
                    val.cancel_5_spv == "0" && val.cancel_6_spv == "0" && val.cancel_7_spv == "0") {
                    r = confirm("Are you sure that all pre job screening values are 'N/A'? Please change the value if it's not true.");
                }
                if (r) {
                    $('#supervisor_can').attr('disabled', 'disabled');
                    $('#loading_supervisor_can').show();
                    $.post("@Url.Action("SupervisorCan","Ptw")", values, function (resp) {
                        if (resp.status == "200" || resp.status == "201") {
                            save(true);
                        } else if (resp.status == "400") {
                            $('#supervisor_can').removeAttr('disabled');
                            $('#loading_supervisor_can').hide();
                            alert("Failed to approve Cancellation Permit To Work.");
                        } else if (resp.status == "404") {
                            $('#supervisor_can').removeAttr('disabled');
                            $('#loading_supervisor_can').hide();
                            alert("Failed to approve Cancellation Permit to Work. Are you trying something not your access?");
                        } else if (resp.status == "401") {
                            $('#supervisor_can').removeAttr('disabled');
                            $('#loading_supervisor_can').hide();
                            alert("Failed to approve Cancellation Permit to Work. You must choose Assessor.");
                        }
                    });
                }
            }
        });

        $('#assessor_can').click(function () {
            $('#type_accrej').val('1');
            $('#comment_assessor').modal('show');
        });

        $('#fo_can').click(function () {
            var values = {
                id: '@Model.id',
                user_id: '@requestor.id'
            };
            if (($('#cancel_1_fo').val() == "2" || $('#cancel_2_fo').val() == "2" || $('#cancel_3_fo').val() == "2" ||
            $('#cancel_4_fo').val() == "2" || $('#cancel_5_fo').val() == "2" || $('#cancel_6_fo').val() == "2" ||
            $('#cancel_7_fo').val() == "2") && ($('#cancel_notes').val().indexOf("FO:") < 0)) {
                $('#cancel_notes_required').show();
                $('#cancel_notes_required').html('Notes must be added. Start with \'FO:\'');
                alert('Screening contains one or more \'no\'. Please add Notes start with \'FO:');
            } else {
                var val = getValues();
                var r = true;
                if (val.cancel_1_fo == "0" && val.cancel_2_fo == "0" && val.cancel_3_fo == "0" && val.cancel_4_fo == "0" &&
                    val.cancel_5_fo == "0" && val.cancel_6_fo == "0" && val.cancel_7_fo == "0") {
                    r = confirm("Are you sure that all pre job screening values are 'N/A'? Please change the value if it's not true.");
                }
                if (r) {
                    $('#fo_can').attr('disabled', 'disabled');
                    $('#loading_fo_can').show();
                    $.post("@Url.Action("FOCan","Ptw")", values, function (resp) {
                        if (resp.status == "200" || resp.status == "201") {
                            save(true);
                        } else if (resp.status == "400") {
                            $('#fo_can').removeAttr('disabled');
                            $('#loading_fo_can').hide();
                            alert("Failed to approve Cancellation Permit To Work.");
                        } else if (resp.status == "404") {
                            $('#fo_can').removeAttr('disabled');
                            $('#loading_fo_can').hide();
                            alert("Failed to approve Cancellation Permit to Work. Are you trying something not your access?");
                        }
                    });
                }
            }
        });

        $('input[name = "area"]:checked').trigger('change');

        $('#fo_code').change(function () {
            var values = {
                fo_code : $(this).val(),
            }
            $.post("@Url.Action("GenerateNewNumber","Ptw")", values, function (resp) {
                if (resp.status == "200") {
                    KBP = resp.ptw_number.split('-')[0];
                    console.log('@(Model.ptw_no != null)' == ' True');
                    if ('@(Model.ptw_no != null)' === 'True') {
                        var s = $('#ptw_no').html().split('-');
                        s[0] = KBP;
                        $('#ptw_no').html(s.join('-'));
                    } else {
                        $('#ptw_no').html(resp.ptw_number);
                    }
                }
            });
        });

        $('#new-loto').click(function () {
            var values = {
                id: '@Model.id',
            };
            $.post("@Url.Action("CreateNewLOTO","Ptw")", values, function (resp) {
                if (resp.status == "200") {
                    $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
                    changeContent('@Url.Action("Index","Loto")' + '/?id=' + resp.id);
                }
            });
        });

        $('#prev-loto').click(function () {
            $('#loto-new').modal('hide');
            $('#loto-prev').modal('show');
        });

        $('#create-loto').click(function () {
            var values = {
                id: '@Model.id',
                id_prev_loto: $('#selected-id').val(),
            };
            $.post("@Url.Action("FromPreviousLOTO","Ptw")", values, function (resp) {
                if (resp.status == "200") {
                    $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
                    changeContent('@Url.Action("Index","Loto")' + '/?id=' + resp.id);
                }
            });
        });

        $('#extend-fi').click(function () {
            var values = {
                id: '@Model.id',
            };
            $.post("@Url.Action("ExtendFIPermit","Ptw")", values, function (resp) {
                if (resp.status == "200") {
                    $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
                    changeContent('@Url.Action("Edit","FI")' + '/?id=' + resp.id);
                } else if (resp.status == "404") {
                    alert(resp.message);
                }
            });
        });

        $('#save').click(function () {
            $('#loading_set').show();
            save(true);
        });

        $('#ptw-cancelled').click(function () {
            var r = confirm('Are you sure want to cancel the PTW Request? This action may not be undone again.');
            if (r) {
                var values = {
                    id: '@Model.id',
                };

                $('#loading').css('display', 'inline-block');
                $.post("@Url.Action("PtwCancelled","Ptw")", values, function (resp) {
                    if (resp.status == "200") {
                        $('#loading').css('display', 'inline-block');
                        alert('Permit Request is cancelled.');
                        $('#content').load('@Url.Action("Edit", "Ptw", new { id = Model.id })');
                    } else if (resp.status == "404") {
                        alert(resp.message);
                    }
                });
            }
        });

        $('#request-no').click(function () {
            values = {
                id: '@Model.id',
            }
            $.post("@Url.Action("RequestGuestHolderNo","Ptw")", values, function (resp) {
                alert('Request sent.');
            });
        });

        $('#fo_save').click(function () {
            $('#loading_fo_notes').show();
            values = getValues();
            values.id = '@Model.id';
            $.post("@Url.Action("EditPtw","Ptw")", values, function (resp) {
                $('#comment_fo').modal('hide');
                $('#loading_fo_notes').hide();
                if (resp.status == "200") {
                    alert("Permit to Work save successful!");
                    $('#content').load('@Url.Action("Edit","Ptw", new { id = Model.id })');
                } else if (resp.status == "400")
                    alert("Permit to Work failed to save\nMessage : " + resp.message);
            });
        });

        $('#change_assessor').click(function () {
            $('#loading_change_assessor').show();
            values = {
                id: '@Model.id',
                assessorId: $('#can_assessor').val(),
            }
            $.post("@Url.Action("ChangeCanAssessor","Ptw")", values, function (resp) {
                $('#change_assessor_modal').modal('hide');
                $('#loading_change_assessor').hide();
                alert("Cancellation assessor is changed!");
                $('#content').load('@Url.Action("Edit","Ptw", new { id = Model.id })');
            });
        });

        var dataSourceIn = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("BindingListLOTO", "Ptw")',
                    type: "POST"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        var result = {};

                        return result;
                    }
                }
            },
            batch: true,
            pageSize: 30,
            schema: {
                model: {
                    id: "id",
                    fields: {
                        id: { type: "number", editable: false },
                        loto_no: { type: "string" },
                        work_location: { type: "string" },
                    }
                }
            },
            pageSize: 10
        });

        //$("#loto-prev-grid").kendoGrid({
        //    dataSource: dataSourceIn,
        //    pageable: true,
        //    sortable: true,
        //    filterable: true,
        //    selectable: "row",
        //    columns: [
        //        { field: "id", hidden: true },
        //        { field: "loto_no", title: "LOTO No.", type: "string", width: 150 },
        //        { field: "work_location", title: "Work Location", type: "string" },
        //    ],
        //    height: 400,
        //    change: function (e) {
        //        var selectedRows = this.select();
        //        var selectedDataItems = [];
        //        for (var i = 0; i < selectedRows.length; i++) {
        //            var dataItem = this.dataItem(selectedRows[i]);
        //            $('#selected-id').val(dataItem.id);
        //        }
        //        // selectedDataItems contains all selected data items
        //    }
        //});

        var homogeneous = new kendo.data.HierarchicalDataSource({
            transport: {
                read: {
                    url: '@Url.Action("BindingFile","Hira")',
                    dataType: "json",
                    type: "POST",
                }
            },
            schema: {
                model: {
                    id: "fileId",
                    hasChildren: "hasChildren",
                }
            }
        });


        if ($("#hira-docs").length > 0) {
            $("#hira-docs").kendoTreeView({
                dataSource: homogeneous,
                dataTextField: "name",
                checkboxes: {
                    template: "# if (!item.hasChildren) { ## if (checkedNodes.indexOf(decodeURIComponent(item.id.split('\\#')[1])) >= 0) { #<input type='checkbox' name='checkedItems' value='true' checked='true' /> # } else { #<input type='checkbox' name='checkedItems' value='true' /> # } ## } #",
                },
            });

            // show checked node IDs on datasource change
            $("#hira-docs").data("kendoTreeView").dataSource.bind("change", function () {
                var treeView = $("#hira-docs").data("kendoTreeView"),
                    message;
                checkedNodeIds(treeView.dataSource.view(), checkedNodes);

                if (checkedNodes.length > 0) {
                    message = "IDs of checked nodes: " + checkedNodes.join(",");
                } else {
                    message = "No nodes checked.";
                }

                console.log(message);
            });
        }

        // function that gathers IDs of checked nodes
        function checkedNodeIds(nodes, checkedNodes) {
            for (var i = 0; i < nodes.length; i++) {
                if (nodes[i].checked) {
                    if (checkedNodes.indexOf(nodes[i].id.split('#')[1]) < 0) {
                        checkedNodes.push(nodes[i].id.split('#')[1]);
                    }
                } else {
                    var j = -1;
                    if ((j = checkedNodes.indexOf(nodes[i].id.split('#')[1])) >= 0) {
                        checkedNodes.splice(j , 1);
                    }
                }

                if (nodes[i].hasChildren) {
                    checkedNodeIds(nodes[i].children.view(), checkedNodes);
                }
            }
        }

        $('#add-new-hira').click(function () {
            $('#add-hira').modal('show');
        });
    })

    function onUpload(e) {
        // Array with information about the uploaded files
        var files = e.files;
        
        // Check the extension of each file and abort the upload if it is not .jpg
        $.each(files, function () {
            if (this.extension != ".pdf") {
                alert("Only .pdf files can be uploaded.")
                e.preventDefault();
            } else {
                var splitName = this.name.split('-');
                if (splitName.length != 5 || splitName[2].indexOf('HIRA') < 0) {
                    alert("The format name of HIRA is must be <name of KBP>-<name of sub KBP>-HIRA-<sequence number> <Process/Activity> R<revision number>-<yymmdd (date of HIRA)>.pdf");
                    e.preventDefault();
                }
            }
        });
        e.data = { id_ptw: '@Model.id' };
    }

    function onSuccess(e) {
        var files = e.files;
        console.log(e);
        for (var i = 0; i < e.response.length; i++) {
            checkedNodes.push(e.response[i]);
        }
        $('#hira-docs').data('kendoTreeView').dataSource.read();
        //// Check the extension of each file and abort the upload if it is not .jpg
        //$.each(files, function () {
        //    $('.k-filename[title="' + this.name + '"]').html('<a href="/Upload/Hira/' + this.name + '">' + this.name + '</a>');
        //});
    }

    function onUploadImage(e) {
        // Array with information about the uploaded files
        var files = e.files;

        // Check the extension of each file and abort the upload if it is not .jpg
        $.each(files, function () {
            //if (this.extension != ".pdf") {
            //    alert("Only .pdf files can be uploaded.")
            //    e.preventDefault();
            //} else {
            //    var splitName = this.name.split('-');
            //    if (splitName.length != 5 || splitName[2].indexOf('HIRA') < 0) {
            //        alert("The format name of HIRA is must be <name of KBP>-<name of sub KBP>-HIRA-<sequence number> <Process/Activity> R<revision number>-<yymmdd (date of HIRA)>.pdf");
            //        e.preventDefault();
            //    }
            //}
        });
    }

    function onSuccessImage(e) {
        var files = e.files;
        $('#acc_images').val(e.response);
        //// Check the extension of each file and abort the upload if it is not .jpg
        //$.each(files, function () {
        //    $('.k-filename[title="' + this.name + '"]').html('<a href="/Upload/Hira/' + this.name + '">' + this.name + '</a>');
        //});
    }

    function save(isset) {
        isset = isset || null;
        values = getValues();
        if (values.is_guest == 1 && isset == null && '@(Model.is_guest == null)' == 'True') {
            $('#guest-name').modal('show');
            return;
        }

        if (values.is_guest == 1) {
            if (values.acc_supervisor == null || values.acc_supervisor == "") {
                $('#acc_supervisor_required').show();
                alert("Supervisor must be chosen.");
                return;
            } else {
                $('#acc_supervisor_required').hide();
            }
        }

        if ('@(Model.status == (int)PtwEntity.statusPtw.ACCSPV)' == 'True' && isset == null) {
            $('#comment_fo').modal('show');
            return;
        }
        if ('@isPosition' == 1) {
            var hira = [];
            $('.k-filename').each(function () {
                hira.push($(this).attr('title'));
            });
            values.hiras = hira;
            if (values.acc_supervisor == null || values.acc_supervisor == "") {
                $('#acc_supervisor_required').show();
                alert("Supervisor must be chosen.");
                return;
            } else {
                $('#acc_supervisor_required').hide();
            }

            if (isset == null && ((values.is_guest == null && values.requestor_ptw_holder_no == 0) || values.guest_holder_no == "")) {
                $('#ptw_holder_no_required').show();
                alert("You don't have PTW Holder Number yet. Please contact Administrator for the number.");
                $('#guest-name').modal('hide');
                return;
            } else {
                $('#ptw_holder_no_required').hide();
            }

            $('#save').attr('disabled', 'disabled');
            $('#loading').css('display', 'inline-block');
            $.post("@Url.Action("Add","Ptw")", $.param(values, true), function (resp) {
                if (values.is_guest == 1) {
                    $('#guest-name').modal('hide');
                    $('#loading_set').hide();
                }
                if (resp.status == "200") {
                    alert("Permit to Work save successful!");
                    $('#content').load('@Url.Action("Edit","Ptw")/' + resp.id);
                } else if (resp.status == "400") {
                    $('#save').removeAttr('disabled');
                    $('#loading').hide();
                    alert("Permit to Work failed to save\nMessage : " + resp.message);
                }
            });
        } else {
            values.id = '@Model.id';
            $.post("@Url.Action("EditPtw","Ptw")", values, function (resp) {
                if (resp.status == "200") {
                    alert("Permit to Work save successful!");
                    $('#content').load('@Url.Action("Edit","Ptw", new { id = Model.id })');
                } else if (resp.status == "400")
                    alert("Permit to Work failed to save\nMessage : " + resp.message);
            });
        }
    }

    function getValues() {

        var area = "";
        var checkBoxes = $("input[name='area']");
        $.each(checkBoxes, function () {
            if ($(this).is(':checked')) {
                area = $(this).val();
            }
        });
        if (area == "0") {
            area = $('#area').val();
        }
        var acc_requestor = '@requestor.id';
        var acc_image = null;
        var is_guest = '@Model.is_guest';
        if ('@requestor.id' == '1') {
            acc_requestor = $('#acc_requestor').val();
            acc_image = $('#acc_images').val();
            is_guest = 1;
        }

        var values = {
            ptw_no : $('#ptw_no').html(),
            proposed_period_start: $('#proposed_period_start').val(),
            proposed_period_end: $('#proposed_period_end').val(),
            dept_requestor: $('#dept_requestor').val(),
            section: $('#section').val(),
            requestor_ptw_holder_no: $('#requestor_ptw_holder_no').val(),
            area: area,
            total_crew: $('#total_crew').val(),
            work_location: $('#work_location').val(),
            work_order_no: $('#work_order_no').val(),
            work_description: $('#work_description').val(),
            area_code: $('#area_code').val(),
            acc_ptw_requestor: acc_requestor,
            can_ptw_requestor: acc_requestor,
            pre_job_1_spv: $('#pre_job_1_spv').val(),
            pre_job_2_spv: $('#pre_job_2_spv').val(),
            pre_job_3_spv: $('#pre_job_3_spv').val(),
            pre_job_4_spv: $('#pre_job_4_spv').val(),
            pre_job_5_spv: $('#pre_job_5_spv').val(),
            pre_job_6_spv: $('#pre_job_6_spv').val(),
            pre_job_7_spv: $('#pre_job_7_spv').val(),
            pre_job_1_fo: $('#pre_job_1_fo').val(),
            pre_job_2_fo: $('#pre_job_2_fo').val(),
            pre_job_3_fo: $('#pre_job_3_fo').val(),
            pre_job_4_fo: $('#pre_job_4_fo').val(),
            pre_job_5_fo: $('#pre_job_5_fo').val(),
            pre_job_6_fo: $('#pre_job_6_fo').val(),
            pre_job_7_fo: $('#pre_job_7_fo').val(),
            cancel_1_spv: $('#cancel_1_spv').val(),
            cancel_2_spv: $('#cancel_2_spv').val(),
            cancel_3_spv: $('#cancel_3_spv').val(),
            cancel_4_spv: $('#cancel_4_spv').val(),
            cancel_5_spv: $('#cancel_5_spv').val(),
            cancel_6_spv: $('#cancel_6_spv').val(),
            cancel_7_spv: $('#cancel_7_spv').val(),
            cancel_1_fo: $('#cancel_1_fo').val(),
            cancel_2_fo: $('#cancel_2_fo').val(),
            cancel_3_fo: $('#cancel_3_fo').val(),
            cancel_4_fo: $('#cancel_4_fo').val(),
            cancel_5_fo: $('#cancel_5_fo').val(),
            cancel_6_fo: $('#cancel_6_fo').val(),
            cancel_7_fo: $('#cancel_7_fo').val(),
            pre_job_notes: $('#pre_job_notes').val(),
            cancel_notes: $('#cancel_notes').val(),
            validity_period_start: $('#validity_period_start').val(),
            validity_period_end: $('#validity_period_end').val(),
            cancellation_date: $('#cancellation_date').val(),
            acc_assessor: $('#acc_assessor').val(),
            // acc_fo: $('#acc_fo').val(),
            fo_code: $('#fo_code').val(),
            acc_supervisor: $('#acc_supervisor').val(),
            hw_need: $('#hw').is(':checked') ? 1 : 0,
            fi_need: $('#fi').is(':checked') ? 1 : 0,
            rad_need: $('#rad').is(':checked') ? 1 : 0,
            wh_need: $('#wh').is(':checked') ? 1 : 0,
            ex_need: $('#ex').is(':checked') ? 1 : 0,
            csep_need: $('#csep').is(':checked') ? 1 : 0,
            loto_need: $('#loto').is(':checked') ? 1 : 0,
            hira_docs: checkedNodes.join('#@@#'),
            guest_holder_no: $('#ptw_holder_no').val(),
            is_guest: is_guest,
            acc_ptw_requestor_approve: acc_image,
            acc_notes_fo_ass: $('#comment_fo_notes').val(),
        };

        return values;
    }

    function validate(values) {
        var isValid = true;
        console.log(values);
        if (values.area == null || values.area == "") {
            $('#area_required').show();
            isValid = false;
        } else {
            $('#area_required').hide();
        }

        if (values.fo_code == null || values.fo_code == "") {
            $('#acc_fo_required').show();
            isValid = false;
        } else {
            $('#acc_fo_required').hide();
        }

        if ((values.is_guest == null && values.requestor_ptw_holder_no == 0) || values.guest_holder_no == "") {
            $('#ptw_holder_no_required').show();
            isValid = false;
        } else {
            $('#ptw_holder_no_required').hide();
        }

        //if (values.acc_fo == 0) {
        //    $('#acc_fo_required').show();
        //    isValid = false;
        //} else {
        //    $('#acc_fo_required').hide();
        //}

        if (values.acc_supervisor == null || values.acc_supervisor == "") {
            $('#acc_supervisor_required').show();
            isValid = false;
        } else {
            $('#acc_supervisor_required').hide();
        }

        if (values.work_location == null || values.work_location == "") {
            $('#work_location_required').show();
            isValid = false;
        } else {
            $('#work_location_required').hide();
        }

        if (values.work_order_no == null || values.work_order_no == "") {
            $('#work_order_no_required').show();
            isValid = false;
        } else {
            $('#work_order_no_required').hide();
        }

        if (values.work_description == null || values.work_description == "") {
            $('#work_description_required').show();
            isValid = false;
        } else {
            $('#work_description_required').hide();
        }

        if (isValid == false) {
            $('#safety-briefing-btn').focus();
            alert('All fields except Area Code and Clerance Permit cannot be blank.');
        } else {
            if ('@(Model.safety_briefing_status < (int)PermitToWork.Models.SafetyBriefing.SafetyBriefingEntity.SafetyBriefingStatus.PRINT)' == 'True') {
                $('#safety-briefing-btn').focus();
                alert('Safety Briefing must be completed.');
                isValid = false;
            }

            if (isValid == true && (values.hira_docs == null || values.hira_docs == "")) {
                $('#hira-td').focus();
                alert('HIRA must be chosen');
                isValid = false;
            }

            if ((values.csep_need == 1 && '@(Model.csep_status == null || Model.csep_status < 1)' == 'True') ||
                (values.hw_need == 1 && '@(Model.hw_status == null || Model.hw_status < 1)' == 'True') || 
                (values.fi_need == 1 && '@(Model.fi_status == null || Model.fi_status < 1)' == 'True') || 
                (values.ex_need == 1 && '@(Model.ex_status == null || Model.ex_status < 1)' == 'True') || 
                (values.wh_need == 1 && '@(Model.wh_status == null || Model.wh_status < 1)' == 'True') || 
                (values.rad_need == 1 && '@(Model.rad_status == null || Model.rad_status < 1)' == 'True') || 
                (values.loto_need == 1 && '@(Model.loto_status == null || Model.loto_status < 1)' == 'True')) {
                alert('All Clearance Permit must be completed first. Please "Save as Draft" if the form\'s button did not appear.');
                isValid = false;
            }
        }

        return isValid;
    }

    function back() {
        window.close();
        //$('#content').load('Home/Index');
    }

    function cancelPtw() {
        var r = confirm("Are you sure want to Cancel this Permit to Work?");
        var values = {
            id: '@Model.id',
            user_id: '@requestor.id',
        };
        if (r == true) {
            $('#loading').css('display', 'inline-block');
            $.post('@Url.Action("CancelPtw","Ptw")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert("Permit to Work has cancelled by Requestor.");
                    $('#content').load('@Url.Action("Edit","Ptw", new { id = Model.id })');
                }
            });
        } else {

        }
    }

    function goToSafetyBriefing(id) {
        if ('@isPosition' == '1') {
            values = getValues();
            if (values.acc_supervisor == null || values.acc_supervisor == "") {
                $('#acc_supervisor_required').show();
                alert("Supervisor must be chosen.");
                return;
            } else {
                $('#acc_supervisor_required').hide();
            }

            if ((values.is_guest == null && values.requestor_ptw_holder_no == 0) || values.guest_holder_no == "") {
                $('#ptw_holder_no_required').show();
                alert("You don't have PTW Holder Number yet. Please contact Administrator for the number.");
                return;
            } else {
                $('#ptw_holder_no_required').hide();
            }

            $('#save').attr('disabled', 'disabled');
            $('#loading').css('display', 'inline-block');
            $.post("@Url.Action("Add","Ptw")", $.param(values, true), function (resp) {
                if (values.is_guest == 1) {
                    $('#guest-name').modal('hide');
                    $('#loading_set').hide();
                }
                if (resp.status == "200") {
                    $('#history').val('@Url.Action("Edit","Ptw")/' + resp.id);
                    $('#content').load('@Url.Action("Create", "SafetyBriefing")/' + resp.id_safety_briefing);
                } else if (resp.status == "400") {
                    $('#save').removeAttr('disabled');
                    $('#loading').hide();
                    alert("Permit to Work failed to save\nMessage : " + resp.message);
                }
            });
        } else {
            $('#history').val('@Url.Action("Edit","Ptw", new { id = Model.id })');
            $('#content').load('@Url.Action("Create", "SafetyBriefing", new { id = Model.id_safety_briefing })');
        }
    }

    function changeAssessor() {
        $('#change_assessor_modal').modal('show');
    }
</script>

<div id="content-header">
	<h1>Permit To Work</h1>
</div>
<div id="breadcrumb">
	<a href="#" title="Go to Home" class="tip-bottom home"><i class="icon-home"></i> Home</a>
	<a href="#"  class="tip-bottom ptw">Permit To Work </a>
    <a href="#" class="current">Create</a>
</div>

<div class="container-fluid header-form">
    <div class="row-fluid">
        <div class="span3 logo">
            <img src="../../Img/logo-clean.png" />
        </div>
        <div class="span6 title">
            <b>PERMIT TO WORK</b><br />
            Star Energy Geothermal (Wayang Windu) Limited
        </div>

        <div class="span3 no">
            No <button class="btn btn-primary" onclick="goToSafetyBriefing('@Model.id_safety_briefing')" id="safety-briefing-btn">SAFETY BRIEFING</button>
            <br /><i>PTW No : <span id="ptw_no">@Model.ptw_no</span></i>
        </div>
    </div>
    <div class="row-fluid separator">
    </div>
</div>

<div class="container-fluid">
    <div class="row-fluid">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="title-form" colspan="4"><b>1.  GENERAL INFORMATION </b><span><i>(Filled by requestor prior to submit PTW request to Facility Owner)</i></span></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Propose Period <small><i>(max 1 week)</i></small></td>
                    <td>From : <input id="proposed_period_start" class="datetimepicker" value="@(Model.proposed_period_start != null ? Model.proposed_period_start.Value.ToString("MM/dd/yyyy hh:mm tt") : DateTime.Today.ToString("MM/dd/yyyy hh:mm tt"))" @(isCanEdit == true ? "" : "disabled") /></td>
                    <td>Until : <input id="proposed_period_end" class="datetimepicker" value="@(Model.proposed_period_end != null ? Model.proposed_period_end.Value.ToString("MM/dd/yyyy hh:mm tt") : DateTime.Today.AddDays(6).AddHours(19).ToString("MM/dd/yyyy hh:mm tt"))" disabled /></td>
                    <td>
                        <ul class="inline table-ul">
                            <li>Extension PTW? </li>
                            <li><label class="radio"><input name="extensionPtw" type="radio" value="1" id="extendPtw1" @(Model.is_extend == 1 ? "checked" : "") disabled/> yes</label>
                            </li>
                            <li><label class="radio"><input name="extensionPtw" type="radio" value="0" id="extendPtw0" @(Model.is_extend != 1 ? "checked" : "") disabled/> no</label>
                            </li>
                        </ul>
                        <div id="InputExtensionPtw">
                            <input  class="table-input table-input-170" type="text" disabled value="@Model.extend_ptw_no">
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>Dept. of Requestor : <br />@Html.DropDownList("dept_requestor",ViewBag.listDepartment as List<SelectListItem>, isCanEdit == true ? new { @class = "table-input-170" } as object :  new { @class = "table-input-170", disabled = "disabled" } as object)</td>
                    <td>Section : @Html.DropDownList("section",ViewBag.listSection as List<SelectListItem>, isCanEdit == true ? new { @class = "table-input-120" } as object :  new { @class = "table-input-120", disabled = "disabled" } as object)</td>
                    <td>Total number crew : @Html.DropDownList("total_crew",ViewBag.listTotalCrew as List<SelectListItem>, isCanEdit == true ? new { @class = "table-input-120" } as object :  new { @class = "table-input-120", disabled = "disabled" } as object)</td>
                    <td>Requestor's PTW holder no. :<span id="ptw_holder_no_required" style="display:none;color:red"><br />You must have Holder Number or it still active.</span><br /> <input class="table-input table-input-170" id="ptw_holder_no" type="text" value="@(requestor.id == 1 || Model.is_guest == 1 ? Model.guest_holder_no : (Model.ptw_holder_no != null ? Model.ptw_holder_no.ptw_holder_no : ""))"  @("disabled") />@if (isCanEdit == true && Model.status == (int)PtwEntity.statusPtw.GUESTCOMPLETE && Model.guest_holder_no == null) {<input type="button" class="btn btn-default" id="request-no" value="Request No" />}<input id="requestor_ptw_holder_no" type="hidden" value="@Model.requestor_ptw_holder_no" @(requestor.id == 1 ? "" : "disabled") /></td>
                </tr>
                <tr>
                    <td colspan="2">
                        <ul class="inline table-ul">
                            <li>AREA : <span id="area_required" style="display:none;color:red"><br />Area must be chosen</span></li>
                            <li><label class="radio"><input name="area" type="radio" value="1" @(Model.area == "1" ? "checked" : "")  @(isCanEdit == true ? "" : "disabled") />Power Station</label></li>
                            <li> <label class="radio"><input name="area" type="radio" value="2" @(Model.area == "2" ? "checked" : "") @(isCanEdit == true ? "" : "disabled") />Steam Field</label></li>
                            <li> <label class="radio"><input name="area" value="0" type="radio" @(Model.area != "1" && Model.area != "2" && Model.area != null ? "checked" : "") @(isCanEdit == true ? "" : "disabled") />Others</label></li>
                            <li><input class="table-input table-input-170" id="area" type="text"  @(Model.area != "1" && Model.area != "2" ? "" : "disabled") value="@(Model.area != "1" && Model.area != "2" && Model.area != null ? Model.area : "")" @(isCanEdit == true ? "" : "disabled") /></li>
                        </ul>
                    </td>
                    <td>
                        Supervisor :
                        <select id="acc_supervisor" @(isCanEdit == true && (Model.status == (int)PtwEntity.statusPtw.CREATE || isPosition == 1) ? "" : "disabled")  class="table-input-170">
                            <option value="">Choose One</option>
                            @foreach (PermitToWork.Models.User.UserEntity u in ViewBag.listSpv as List<PermitToWork.Models.User.UserEntity>)
                            {
                                <option value="@u.id" @(Model.acc_supervisor == u.id.ToString() || (listSpv != null && listSpv.Exists(p => p.id == u.id))  ? "selected" : "")>@u.alpha_name</option>
                            }
                        </select>
                         <span id="acc_supervisor_required" style="display:none;color:red"><br />Supervisor must be chosen</span>
                    </td>
                    <td>
                        Facility Owner :
                        <select id="fo_code" @(isCanEdit == true ? "" : "disabled")  class="table-input-170">
                            <option value="">Choose One</option>
                            @foreach (PermitToWork.Models.Master.MstFOEntity u in list_fo)
                            {
                                <option value="@u.fo_code" @(Model.ptw_no != null && Model.ptw_no.Split('-')[0] == u.fo_code ? "selected" : "")>@u.fo_name</option>
                            }
                        </select>
                         <span id="acc_fo_required" style="display:none;color:red"><br />Facility Owner must be chosen</span>
                    </td>
                </tr>
                <tr>
                    <td colspan="3">Work Location : <input class="table-input table-input-170" id="work_location" type="text" value="@(Model.work_location != null ? Model.work_location : "")" @(isCanEdit == true ? "" : "disabled") /> , Area Code : @Html.DropDownList("area_code",ViewBag.listAreaCode as List<SelectListItem>, isCanEdit == true ? new { @class = "table-input-120" } as object :  new { @class = "table-input-120", disabled = "disabled" } as object) <span id="work_location_required" style="display:none;color:red"><br />Work Location cannot be blank</span></td>
                    <td>Work Order No: <input class="table-input table-input-170" id="work_order_no" type="text" value="@(Model.work_order_no != null ? Model.work_order_no : "")" @(isCanEdit == true ? "" : "disabled") /> <span id="work_order_no_required" style="display:none;color:red"><br />Work Order Number cannot be blank</span></td>
                </tr>
                <tr>
                    <td colspan="4">Work Description : <span id="work_description_required" style="display:none;color:red"><br />Work Description cannot be blank</span><br/>
                        <textarea class="table-textarea" id="work_description" @(isCanEdit == true ? "" : "disabled")>@(Model.work_description != null ? Model.work_description : "")</textarea>
                    </td>
                </tr>

            </tbody>
        </table>
        <table class="table table-bordered">
            <tbody>
                <tr>
                    <td colspan="4"><strong>Specify Clearance Permit Require</strong> <em><small>(All clearance and Hira must be completed prior to PTW approval)</small></em>
                    </td>
                </tr>
                <tr>
                    <td class="td-centre"><strong>Check</strong></td>
                    <td class="td-centre"><strong>Clearance Permit Require</strong></td>
                    <td class="td-centre" style="width:20%"><strong>Clearance Permit Number</strong></td>
                    <td class="td-centre"><strong>Clearance Permit Status</strong></td>
                    <td class="td-centre" style="width:25%"><strong>Minimum Document Required</strong></td>
                    <td class="td-centre" style="width:25%"><strong>Form to be Completed and Enclosed</strong></td>
                </tr>
                <tr>
                    <td class="td-centre"><input id="loto" type="checkbox" @(isCanEdit == true && Model.is_extend != 1 ? "" : "disabled") @(Model.loto_need == 1 ? "checked" : "") /></td>
                    <td class="small">Lock Out Tag Out (LOTO)</td>
                    <td class="small">
                        @if (Model.loto_need == 1)
                        {
                            <button class="btn btn-small" id="loto_id" data-id="@Model.loto_id">Go To LOTO Permit</button>
                        }
                    </td>
                    <td class="small">
                        @Html.Raw(Model.clearancePermitStatus(PtwEntity.clearancePermit.LOCKOUTTAGOUT.ToString()))
                    </td>
                    <td class="small">Requestor's supervisor LOTO point proposal</td>
                    <td class="small">Lock Appllication Form (102a): description, drawing references, supervisor LOTO point proposal LOTO permit form (102b): general info</td>
                </tr>
                <tr>
                    <td class="td-centre"><input id="csep" type="checkbox" @(isCanEdit == true && Model.is_extend != 1 ? "" : "disabled") @(Model.csep_id != null ? "checked" : "") /></td>
                    <td class="small">Confined Space Entry Permit (CSEP)</td>
                    <td class="small">
                        @if (Model.csep_id != null)
                        {
                            <button class="btn btn-small" id="csep_id" data-id="@Model.csep_id">@Model.csep_no</button>
                        }
                    </td>
                    <td class="small">
                        @Html.Raw(Model.clearancePermitStatus(PtwEntity.clearancePermit.CONFINEDSPACE.ToString()))
                    </td>
                    <td class="small">Confined space emergency evacuation plan</td>
                    <td class="small">CSEP form(103a) : general info, spv initial hazard screening  emergency evacuation form(101c) Approved emergency evacuation plan</td>
                </tr>
                <tr>
                    <td class="td-centre"><input id="hw" type="checkbox" @(isCanEdit == true && Model.is_extend != 1 ? "" : "disabled") @(Model.hw_id != null ? "checked" : "") /></td>
                    <td class="small">Hot Work (HW)</td>
                    <td class="small">
                        @if (Model.hw_id != null)
                        {
                            <button class="btn btn-small" id="hw_id" data-id="@Model.hw_id">@Model.hw_no</button>
                        }
                    </td>
                    <td class="small">
                        @Html.Raw(Model.clearancePermitStatus(PtwEntity.clearancePermit.HOTWORK.ToString()))
                    </td>
                    <td class="small">Emergency evacuation plan, competence fire attendance</td>
                    <td class="small">HW form(104a) : general info, initial hazard screening  emergency evacuation form(101c) Approved emergency evacuation plan</td>
                </tr>
                <tr>
                    <td class="td-centre"><input id="fi" type="checkbox" @(isCanEdit == true && Model.is_extend != 1 ? "" : "disabled") @(Model.fi_id != null ? "checked" : "")/></td>
                    <td class="small">Fire Impairment (FI)</td>
                    <td class="small">
                        @{
                            bool isCanExtend = false;
                            if (Model.fireImpairments != null) {
                                var a = Model.fireImpairments.Select(p => p.status).Min();
                                if (a == (int)PermitToWork.Models.FIEntity.FIStatus.CANDEPTFOAPPROVE) {
                                    isCanExtend = true;
                                }
                            }
                        }
                        @if (Model.fi_id != null)
                        {
                            <button class="btn btn-small" id="fi_id" data-id="@Model.fi_id">@Model.fi_no</button>
                        }
                    </td>
                    <td class="small">@Html.Raw(Model.clearancePermitStatus(PtwEntity.clearancePermit.FIREIMPAIRMENT.ToString()))</td>
                    <td class="small">Fire operation system back up plan</td>
                    <td class="small">FI form(105a) : general info, clearance from spv, ERT leader, safety officer</td>
                </tr>
                <tr>
                    <td class="td-centre"><input id="ex" type="checkbox" @(isCanEdit == true && Model.is_extend != 1 ? "" : "disabled") @(Model.ex_id != null ? "checked" : "") /></td>
                    <td class="small">Excavation (Ex)</td>
                    <td class="small">
                        
                        @if (Model.ex_id != null)
                        {
                            <button class="btn btn-small" id="ex_id" data-id="@Model.ex_id">@Model.ex_no&nbsp;</button>
                        }
                    </td>
                    <td class="small">@Html.Raw(Model.clearancePermitStatus(PtwEntity.clearancePermit.EXCAVATION.ToString()))</td>
                    <td class="small">Excavation clearance from facility + E&I officer</td>
                    <td class="small">Ex form(106a) : general info, clearance from facility + E&I officer</td>
                </tr>
                <tr>
                    <td class="td-centre"><input id="wh" type="checkbox" @(isCanEdit == true && Model.is_extend != 1 ? "" : "disabled") @(Model.wh_id != null ? "checked" : "")/></td>
                    <td class="small">Working at Height (WH)</td>
                    <td class="small">
                        @if (Model.wh_id != null)
                        {
                            <button class="btn btn-small" id="wh_id" data-id="@Model.wh_id">@Model.wh_no&nbsp;</button>
                        }
                    </td>
                    <td class="small">@Html.Raw(Model.clearancePermitStatus(PtwEntity.clearancePermit.WORKINGHEIGHT.ToString()))</td>
                    <td class="small">Working at height emergency evacuation plan, scafolder certificate (for scafolding erection)</td>
                    <td class="small">WH form(107a) : general info, supervisor assesment</td>
                </tr>
                <tr>
                    <td class="td-centre"><input id="rad" type="checkbox" @(isCanEdit == true && Model.is_extend != 1 ? "" : "disabled") @(Model.rad_id != null ? "checked" : "")/></td>
                    <td class="small">RadioGraphic (Rad)</td>
                    <td class="small">
                        @if (Model.rad_id != null)
                        {
                            <button class="btn btn-small" id="rad_id" data-id="@Model.rad_id">@Model.rad_no&nbsp;</button>
                        }
                    </td>
                    <td class="small">@Html.Raw(Model.clearancePermitStatus(PtwEntity.clearancePermit.RADIOGRAPHY.ToString()))</td>
                    <td class="small">Copy of certificate of competences: radiographic (engineer, operator, safety), emergency rescue plan, radioactive equipment & material manifest</td>
                    <td class="small">Rad form (108a) : general info, initial assesment (spv, engineer, operator, safety officer)</td>
                </tr>
                <tr>
                    <td colspan="6" id="hira-td">
                        HIRA no <i><b>(Filename Format: &lt;name of KBP&gt;-&lt;name of sub KBP&gt;-HIRA-&lt;sequence number&gt; &lt;Process/Activity&gt; R&lt;revision number&gt;-&lt;yymmdd (date of HIRA)&gt;.pdf)</b></i> : <em><small>(choose HIRA number and copy of HIRA must be attach)</small></em>                          
                        @if (isCanEdit == true) {
                        <div id="hira-docs"></div>
                        <button class="btn btn-success" id="add-new-hira">Upload HIRA</button>
                        }
                        @{
                            if (Model.hira_docs != null)
                            {
                                string[] hiraDocs = Model.hira_docs.Split(new string[] {"#@#"}, StringSplitOptions.None);
                                <ul id="existing-files" class="k-upload-files k-reset">
                                    @foreach (string s in hiraDocs) {
                                        if (s != "") {
                                        var fileName = HttpUtility.UrlDecode(s);
                                    <li class="k-file" data-att-id="@(Path.GetFileName(fileName))">
                                        <span class="k-icon k-success">uploaded</span>
                                        <span class="k-filename" title="@(Path.GetFileName(fileName))" style="max-width:none"><a href="@Url.Content("~/" + fileName)" target="_blank">@(Path.GetFileName(fileName))</a><span class="k-progress"><span class="k-state-selected k-progress-status" style="width: 100%;"></span></span></span>
                                    </li>
                                        }
                                    }
                                </ul>
                            }
                        }   
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="row-fluid separator-dash">
        </div>
        <br />
@if(isPosition != 1) {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="title-form" colspan="4"><strong>2.  PRE-JOB SCREENING </strong><span></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td rowspan="2"><strong>No</strong></td>
                    <td rowspan="2"><strong>Description<br/> </strong><em><small>(Answer the screening items with Yes, No or N/A)</small></em></td>
                    <td colspan="2" class="td-centre"><strong>Assesments (Y, No, N/A)</strong></td>
                </tr>
                <tr>
                    <td><strong>Requestor's Supervisor</strong></td>
                    <td><strong>Facility Owner</strong></td>
                </tr>
                <tr>
                    <td>1</td>
                    <td class="small">Are the <strong>clearance permit</strong> (see refer to above clearance requirement checked) completed and attach to the permit?</td>
                    <td>
                        <select id="pre_job_1_spv" @(user_ptw[1] == true && Model.acc_supervisor_approve == null && isCanEdit == true ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_1_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_1_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_1_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="pre_job_1_fo" @(user_ptw[3] == true && Model.acc_fo_approve == null && isCanEdit == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_1_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_1_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_1_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>2</td>
                    <td class="small">Are person to do this job qualified?</td>
                    <td>
                        <select id="pre_job_2_spv" @(user_ptw[1] == true && Model.acc_supervisor_approve == null && isCanEdit == true ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_2_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_2_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_2_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="pre_job_2_fo" @(user_ptw[3] == true && Model.acc_fo_approve == null && isCanEdit == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_2_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_2_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_2_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>3</td>
                    <td class="small">Are the works not changing the existing system or design?</td>
                    <td>
                        <select id="pre_job_3_spv" @(user_ptw[1] == true && Model.acc_supervisor_approve == null && isCanEdit == true ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_3_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_3_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_3_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="pre_job_3_fo" @(user_ptw[3] == true && Model.acc_fo_approve == null && isCanEdit == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_3_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_3_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_3_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>4</td>
                    <td class="small">Is there a valid written procedure (SOP) for the work?</td>
                    <td>
                        <select id="pre_job_4_spv" @(user_ptw[1] == true && Model.acc_supervisor_approve == null && isCanEdit == true ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_4_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_4_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_4_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="pre_job_4_fo" @(user_ptw[3] == true && Model.acc_fo_approve == null && isCanEdit == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_4_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_4_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_4_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>5</td>
                    <td class="small">Are tools suitable and in good condition?</td>
                    <td>
                        <select id="pre_job_5_spv" @(user_ptw[1] == true && Model.acc_supervisor_approve == null && isCanEdit == true ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_5_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_5_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_5_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="pre_job_5_fo" @(user_ptw[3] == true && Model.acc_fo_approve == null && isCanEdit == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_5_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_5_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_5_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>6</td>
                    <td class="small">Is the safety equipments required available and reliable to use?</td>
                    <td>
                        <select id="pre_job_6_spv" @(user_ptw[1] == true && Model.acc_supervisor_approve == null && isCanEdit == true ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_6_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_6_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_6_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="pre_job_6_fo" @(user_ptw[3] == true && Model.acc_fo_approve == null && isCanEdit == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_6_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_6_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_6_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>7</td>
                    <td class="small">Have all identified hazards been controlled</td>
                    <td>
                        <select id="pre_job_7_spv" @(user_ptw[1] == true && Model.acc_supervisor_approve == null && isCanEdit == true ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_7_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_7_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_7_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="pre_job_7_fo" @(user_ptw[3] == true && Model.acc_fo_approve == null && isCanEdit == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS ? "" : "disabled")>
                          <option value="0" @(Model.pre_job_7_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.pre_job_7_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.pre_job_7_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td colspan="4" class="small">
                        Note: <em>write any concern related to these assesment and attach other check sheet if necessary; Spv: requestor's 
                                supervisor project maanger; FO : Facility owner; All parties have right to stop work when control method is not adequate to control the hazard
                              </em><br />
                        <span id="pre_job_notes_required" style="display:none;color:red"></span>
                        <textarea class="table-textarea" id="pre_job_notes" @(isCanEdit == true ? "" : "disabled")>@(user_ptw[1] == true && isCanEdit == true ? Model.pre_job_notes + "\nSpv: " : (user_ptw[3] == true && isCanEdit == true && Model.acc_assessor != null ? Model.pre_job_notes + "\nFO: " : Model.pre_job_notes))</textarea>
                    </td>
                </tr>
            </tbody>
        </table>
        <table class="table table-bordered">
            <tr>
                <td>
                    Notes from FO to Assessor:<br />
                    @Model.acc_notes_fo_ass
                </td>
            </tr>
            <tr>
                <td>
                    Notes from Assessor to FO:<br />
                    @Model.acc_notes_ass_fo
                </td>
            </tr>
        </table>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="title-form" colspan="2"><strong>3. ACCEPTANCE & VALIDATION</strong></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        Validity period, from :  <input id="validity_period_start" class="datetimepicker" value="@(user_ptw[3] == true && Model.acc_fo_approve == null ? Model.proposed_period_start.Value.ToString("MM/dd/yyyy hh:mm tt") : (Model.validity_period_start != null ? Model.validity_period_start.Value.ToString("MM/dd/yyyy hh:mm tt") : ""))" @(user_ptw[3] == true && Model.acc_fo_approve == null && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS && isCanEdit == true ? "" : "disabled") >
                    </td>
                    <td>
                        Validity period, to :  <input id="validity_period_end" class="datetimepicker" value="@(user_ptw[3] == true && Model.acc_fo_approve == null ? Model.proposed_period_end.Value.ToString("MM/dd/yyyy hh:mm tt") : (Model.validity_period_end != null ? Model.validity_period_end.Value.ToString("MM/dd/yyyy hh:mm tt") : ""))" @(user_ptw[3] == true && Model.acc_fo_approve == null && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCASS && isCanEdit == true ? "" : "disabled")  >
                    </td>
                </tr>
                <tr>
                    <td colspan="2" class="td-centre">
                        <strong><u>Accepted by,</u></strong><br/>
                        <small><em>(I am satisfied that the work site is safe for work to start. I will brief all parties and supervise the work)</em></small>
                    </td>
                </tr>
                <tr>
                    <td class="td-centre">
                        @if (isClearenceComplete.Value && Model.acc_ptw_requestor_approve == null && user_ptw[0] == true && Model.status < (int)PtwEntity.statusPtw.CANCELLED)
                        {
                            <button class="btn btn-success" type="button" id="requestor_acc">Accept</button><br />
                            <span id="loading_requestor_acc" style="display:none"><img src="/Content/Images/loading.gif" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span><br />
                        }
                        else
                        {
                            <img id="img_approve_requestor" width="50" height="50" @(Model.acc_ptw_requestor_approve == null ? "style=display:none;" : "style=display:inline-block;")  src="@(Model.acc_ptw_requestor_approve == null ? "" : Model.acc_ptw_requestor_approve.Substring(1))"/><br />
                        }
                        <span>@(Model.is_guest == 1 ? Model.acc_ptw_requestor : listUser.listUser.Where(p => p.id == Model.acc_ptw_requestor.AsInt()).FirstOrDefault().alpha_name)</span><br />
                        <strong><u>PTW Requestor</u></strong>
                    </td>
                    <td class="td-centre">
                        @if (Model.acc_ptw_requestor_approve != null && Model.acc_supervisor_approve == null && user_ptw[1] == true)
                        {
                            <button class="btn btn-success" type="button" id="supervisor_acc">Accept</button> 
                            if (Model.is_guest != 1) { <button class="btn btn-danger" type="button" id="supervisor_reject">Reject</button> }<br />
                            <span id="loading_supervisor_acc" style="display:none"><img src="/Content/Images/loading.gif" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span><br />
                        }
                        else
                        {
                            <img id="img_approve_supervisor" width="50" height="50" @(Model.acc_supervisor_approve == null ? "style=display:none;" : "style=display:inline-block;")  src="@(Model.acc_supervisor_approve == null ? "" : Model.acc_supervisor_approve.Substring(1))"/><br />
                        }
                        @if (Model.acc_supervisor != null)
                        {
                            if ((Model.acc_supervisor_approve == null && Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.SUPERVISOR.ToString()].employee_delegate == requestor.id))
                            {
                                <span>@listUser.listUser.Where(p => p.id == Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.SUPERVISOR.ToString()].employee_delegate).FirstOrDefault().alpha_name</span><br />
                            }
                            else if (Model.acc_supervisor_approve != null && Model.acc_supervisor_approve.Substring(0, 1) == "d")
                            {
                                <span>@listUser.listUser.Where(p => p.id == Model.acc_supervisor_delegate.AsInt()).FirstOrDefault().alpha_name</span><br />
                            }
                            <span>@((Model.acc_supervisor_approve == null && Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.SUPERVISOR.ToString()].employee_delegate == requestor.id) || (Model.acc_supervisor_approve != null && Model.acc_supervisor_approve.Substring(0, 1) == "d") ? "a/n" : "") @(listUser.listUser.Where(p => p.id == Model.acc_supervisor.AsInt()).FirstOrDefault().alpha_name)</span><br />
                        }
                        <strong><u>Supervisor / Project manager</u></strong>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" class="td-centre">
                        <strong><u>Authorized by,</u></strong><br/>
                        <small><em>(I am satisfied that the work site is safe for work to start. I will brief all parties and supervise the work)</em></small><br />
                        
                    </td>
                </tr>
                <tr>
                    <td class="td-centre">
                        @if (Model.acc_supervisor_approve != null && Model.acc_assessor_approve == null && user_ptw[2] == true)
                        {
                            <button class="btn btn-success" type="button" id="assessor_acc">Accept</button> <button class="btn btn-danger" type="button" id="assessor_reject">Reject</button><br />
                            <span id="loading_assessor_acc" style="display:none"><img src="/Content/Images/loading.gif" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span><br />
                        }
                        else
                        {
                            <img id="img_approve_assessor" width="50" height="50" @(Model.acc_assessor_approve == null ? "style=display:none;" : "style=display:inline-block;")  src="@(Model.acc_assessor_approve == null ? "" : Model.acc_assessor_approve.Substring(1))"/><br />
                        }
                        @if (Model.acc_supervisor_approve != null && Model.acc_assessor_approve == null && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCSPV && user_ptw[3] == true)
                        {
                            string fo_code = Model.ptw_no.Split('-')[0];
                            <select id="acc_assessor">
                                <option value="">Choose One</option>
                            @foreach (PermitToWork.Models.User.UserEntity u in listUser.listUser)
                            {
                                if (list_assessor.Exists(p => p.id_employee == u.id && p.assessor_code == fo_code)) {
                                 <option value="@u.id" @(Model.acc_assessor == u.id.ToString() ? "selected" : "")>@u.alpha_name</option>  
                                 } 
                            }
                            </select><br />
                        }
                        else if (Model.acc_assessor != null)
                        {
                            if ((Model.acc_assessor_approve == null && Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.ASSESSOR.ToString()].employee_delegate == requestor.id))
                            {
                                <span>@listUser.listUser.Where(p => p.id == Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.ASSESSOR.ToString()].employee_delegate).FirstOrDefault().alpha_name</span><br />
                            }
                            else if (Model.acc_assessor_approve != null && Model.acc_assessor_approve.Substring(0, 1) == "d")
                            {
                                <span>@listUser.listUser.Where(p => p.id == Model.acc_assessor_delegate.AsInt()).FirstOrDefault().alpha_name</span><br />
                            }
                            <span>@((Model.acc_assessor_approve == null && Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.ASSESSOR.ToString()].employee_delegate == requestor.id) || (Model.acc_assessor_approve != null && Model.acc_assessor_approve.Substring(0, 1) == "d") ? "a/n" : "") @(listUser.listUser.Where(p => p.id == Model.acc_assessor.AsInt()).FirstOrDefault().alpha_name)</span><br />
                        }
                        <strong><u>Assessor</u></strong>
                    </td>
                    <td class="td-centre">
                        @if (Model.acc_assessor_approve != null && Model.acc_fo_approve == null && user_ptw[3] == true)
                        {
                            <button class="btn btn-success" type="button" id="fo_acc">Accept</button> <button class="btn btn-danger" type="button" id="fo_reject">Reject</button><br />
                            <span id="loading_fo_acc" style="display:none"><img src="/Content/Images/loading.gif" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span><br />
                        }
                        else
                        {
                            <img id="img_approve_fo" width="50" height="50" @(Model.acc_fo_approve == null ? "style=display:none;" : "style=display:inline-block;")  src="@(Model.acc_fo_approve == null ? "" : Model.acc_fo_approve.Substring(1))"/><br />
                        }
                        @*@if (Model.acc_supervisor_approve != null && Model.acc_assessor_approve == null && user_ptw[2] == true)
                        {
                            <select id="acc_fo">
                                <option value="">Choose One</option>
                            @foreach (PermitToWork.Models.User.UserEntity u in listUser.listUser)
                            {
                                 <option value="@u.id" @(Model.acc_fo == u.id.ToString() ? "selected" : "")>@u.alpha_name</option>   
                            }
                            </select><br />
                        }*@
                        @if (Model.acc_fo != null)
                        {
                            if ((Model.acc_fo_approve == null && user_ptw[3] == true && Model.acc_fo != requestor.id.ToString()))
                            {
                                <span>@listUser.listUser.Where(p => p.id == requestor.id).FirstOrDefault().alpha_name</span><br />
                            } else if(Model.acc_fo_approve != null && Model.acc_fo_approve.Substring(0, 1) == "d") {
                                <span>@listUser.listUser.Where(p => p.id == Model.acc_fo_delegate.AsInt()).FirstOrDefault().alpha_name</span><br />
                            }
                            <span>@((Model.acc_fo_approve == null && user_ptw[3] == true && Model.acc_fo != requestor.id.ToString()) || (Model.acc_fo_approve != null && Model.acc_fo_approve.Substring(0, 1) == "d") ? "a/n" : "") @(listUser.listUser.Where(p => p.id == Model.acc_fo.AsInt()).FirstOrDefault().alpha_name)</span><br />
                        }
                        <strong><u>Facility Owner</u></strong>
                    </td>
                </tr>
            </tbody>
        </table>
                        if (isCancel == true && Model.has_extend == false && Model.status <= (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.CANFO)
                        {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="title-form" colspan="4"><strong>4. CANCELATION SCREENING </strong></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td rowspan="2"><strong>No</strong></td>
                    <td rowspan="2"><strong>Description<br/> </strong><em><small>(Answer the screening items with Yes, No or N/A)</small></em></td>
                    <td colspan="2" class="td-centre"><strong>Assesments (Y, No, N/A)</strong></td>
                </tr>
                <tr>
                    <td><strong>Requestor's Supervisor</strong></td>
                    <td><strong>Facility Owner</strong></td>
                </tr>
                <tr>
                    <td>1</td>
                    <td class="small">Have work completed?</td>
                    <td>
                        <select id="cancel_1_spv" @(user_ptw[4] == true && Model.can_supervisor_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_1_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_1_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_1_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="cancel_1_fo" @(user_ptw[6] == true && Model.can_fo_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_1_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_1_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_1_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>2</td>
                    <td class="small">Have the Clearance Permit(s) canceled?</td>
                    <td>
                        <select id="cancel_2_spv" @(user_ptw[4] == true && Model.can_supervisor_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_2_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_2_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_2_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="cancel_2_fo" @(user_ptw[6] == true && Model.can_fo_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_2_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_2_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_2_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>3</td>
                    <td class="small">Personnel(s) have been notified that this PTW is cancelled</td>
                    <td>
                        <select id="cancel_3_spv" @(user_ptw[4] == true && Model.can_supervisor_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_3_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_3_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_3_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="cancel_3_fo" @(user_ptw[6] == true && Model.can_fo_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_3_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_3_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_3_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>4</td>
                    <td class="small">Worksite and equipment affected left in safe condition</td>
                    <td>
                        <select id="cancel_4_spv" @(user_ptw[4] == true && Model.can_supervisor_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_4_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_4_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_4_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="cancel_4_fo" @(user_ptw[6] == true && Model.can_fo_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_4_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_4_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_4_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>5</td>
                    <td class="small">Is the work performed / construction accepted by work requestor?</td>
                    <td>
                        <select id="cancel_5_spv" @(user_ptw[4] == true && Model.can_supervisor_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_5_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_5_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_5_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="cancel_5_fo" @(user_ptw[6] == true && Model.can_fo_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_5_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_5_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_5_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>6</td>
                    <td class="small">Are the current procedure(s) required to revise</td>
                    <td>
                        <select id="cancel_6_spv" @(user_ptw[4] == true && Model.can_supervisor_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_6_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_6_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_6_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="cancel_6_fo" @(user_ptw[6] == true && Model.can_fo_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_6_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_6_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_6_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>7</td>
                    <td class="small">Have the worksite clear, clean and tidy (housekeeping satisfactory)?</td>
                    <td>
                        <select id="cancel_7_spv" @(user_ptw[4] == true && Model.can_supervisor_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_7_spv == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_7_spv == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_7_spv == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                    <td>
                        <select id="cancel_7_fo" @(user_ptw[6] == true && Model.can_fo_approve == null && Model.has_extend == false ? "" : "disabled")>
                          <option value="0" @(Model.cancel_7_fo == 0 ? "selected" : "")>N/A</option>
                          <option value="1" @(Model.cancel_7_fo == 1 ? "selected" : "")>Yes</option>
                          <option value="2" @(Model.cancel_7_fo == 2 ? "selected" : "")>No</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td colspan="4" class="small">
                        Note: <em>write any concern related to cancellation PTW, attach other check sheet if necessary
                              </em><br />
                        <span id="cancel_notes_required" style="display:none;color:red"></span>
                        <textarea class="table-textarea" id="cancel_notes" @(isCancel == true && ((user_ptw[4] == true && Model.can_supervisor_approve == null) || (user_ptw[5] == true && Model.can_assessor_approve == null) || (user_ptw[6] == true && Model.can_fo_approve == null)) && Model.has_extend == false ? "" : "disabled")>@(user_ptw[4] == true ? Model.cancel_notes + "\nSpv: " : (user_ptw[6] == true ? Model.cancel_notes + "\nFO: " : Model.cancel_notes))</textarea>
                    </td>
                </tr>
            </tbody>
        </table>
        <table class="table table-bordered">
            <tr>
                <td>
                    Notes from Assessor to FO:<br />
                    @Model.can_notes_ass_fo
                </td>
            </tr>
        </table>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="title-form" colspan="2"><strong>5. CANCELATION</strong></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="2">
                        Cancelation date :  <input id="cancellation_date" class="datetimepicker" value="@(Model.cancellation_date != null ? Model.cancellation_date.Value.ToString("MM/dd/yyyy hh:mm tt") : "")" disabled/>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" class="td-centre">
                        <strong><u>Permit return by,</u></strong>                        
                    </td>
                </tr>
                <tr>
                    <td class="td-centre" style="width:50%">
                        @if (Model.can_ptw_requestor_approve == null && user_ptw[0] == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.CANCEL && Model.has_extend == false && Model.safety_briefing_status == (int)PermitToWork.Models.SafetyBriefing.SafetyBriefingEntity.SafetyBriefingStatus.CANCELLATIONSIGNCOMPLETE)
                        {
                            <button class="btn btn-success" type="button" id="requestor_can">Accept</button><br />
                            <span id="loading_requestor_can" style="display:none"><img src="/Content/Images/loading.gif" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span><br />
                        } else if (Model.can_ptw_requestor_approve == null && user_ptw[0] == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.CANCEL && Model.has_extend == false && Model.safety_briefing_status != (int)PermitToWork.Models.SafetyBriefing.SafetyBriefingEntity.SafetyBriefingStatus.CANCELLATIONSIGNCOMPLETE) {
                            <text><span>You Must Attach Safety Briefing first in Safety Briefing section. You can go to Safety Briefing by clicking "Safety Briefing" at top of PTW Document.<br /></span></text>
                        } else
                        {
                            <img id="img_cancel_requestor" width="50" height="50" @(Model.can_ptw_requestor_approve == null ? "style=display:none;" : "style=display:inline-block;")  src="@(Model.can_ptw_requestor_approve == null ? "" : Model.can_ptw_requestor_approve.Substring(1))"/><br />
                        }
                        <span>@(Model.is_guest == 1 ? Model.can_ptw_requestor : listUser.listUser.Where(p => p.id == Model.can_ptw_requestor.AsInt()).FirstOrDefault().alpha_name)</span><br />
                        <strong><u>PTW Requestor</u></strong>
                    </td>
                    <td class="td-centre">
                        @if (Model.can_ptw_requestor_approve != null && Model.can_supervisor_approve == null && user_ptw[4] == true && Model.has_extend == false)
                        {
                            <button class="btn btn-success" type="button" id="supervisor_can">Accept</button>
                            if (Model.is_guest != 1) { <button class="btn btn-danger" type="button" id="supervisor_reject_can">Reject</button> }<br />
                            <span id="loading_supervisor_can" style="display:none"><img src="/Content/Images/loading.gif" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span><br />
                        }
                        else
                        {
                            <img id="img_cancel_supervisor" width="50" height="50" @(Model.can_supervisor_approve == null ? "style=display:none;" : "style=display:inline-block;")  src="@(Model.can_supervisor_approve == null ? "" : Model.can_supervisor_approve.Substring(1))"/><br />
                        }
                        @if ((Model.can_supervisor_approve == null && Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.SUPERVISOR.ToString()].employee_delegate == requestor.id))
                        {
                        <span>@listUser.listUser.Where(p => p.id == Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.SUPERVISOR.ToString()].employee_delegate).FirstOrDefault().alpha_name</span><br />
                        }
                        else if (Model.can_supervisor_approve != null && Model.can_supervisor_approve.Substring(0, 1) == "d")
                        {
                        <span>@listUser.listUser.Where(p => p.id == Model.can_supervisor_delegate.AsInt()).FirstOrDefault().alpha_name</span><br />
                        }
                        @*@if ((Model.can_supervisor_approve == null && Model.can_supervisor_delegate == requestor.id.ToString()) || (Model.can_supervisor_approve != null && Model.can_supervisor_approve.Substring(0, 1) == "d"))
                        {
                            <span>@listUser.listUser.Where(p => p.id == Model.can_supervisor_delegate.AsInt()).FirstOrDefault().alpha_name</span><br />
                        }*@
                        <span>@((Model.can_supervisor_approve == null && Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.SUPERVISOR.ToString()].employee_delegate == requestor.id) || (Model.can_supervisor_approve != null && Model.can_supervisor_approve.Substring(0, 1) == "d") ? "a/n" : "") @(listUser.listUser.Where(p => p.id == Model.can_supervisor.AsInt()).FirstOrDefault().alpha_name)</span><br />
                        <strong><u>Supervisor / Project manager</u></strong>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" class="td-centre">
                        <strong><u> Permit cancelled by,</u></strong>
                    </td>
                </tr>
                <tr>
                    <td class="td-centre">
                        @if (Model.can_supervisor_approve != null && Model.can_assessor_approve == null && user_ptw[5] == true && Model.has_extend == false)
                        {
                            <button class="btn btn-success" type="button" id="assessor_can">Accept</button>
                            <button class="btn btn-danger" type="button" id="assessor_reject_can">Reject</button><br />
                            <span id="loading_assessor_can" style="display:none"><img src="/Content/Images/loading.gif" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span><br />
                        }
                        else
                        {
                            <img id="img_cancel_assessor" width="50" height="50" @(Model.can_assessor_approve == null ? "style=display:none;" : "style=display:inline-block;")  src="@(Model.can_assessor_approve == null ? "" : Model.can_assessor_approve.Substring(1))"/><br />
                        }
                        @*@if ((Model.can_assessor_approve == null && Model.can_assessor_delegate == requestor.id.ToString()) || (Model.can_assessor_approve != null && Model.can_assessor_approve.Substring(0, 1) == "d"))
                        {
                            <span>@listUser.listUser.Where(p => p.id == Model.can_assessor_delegate.AsInt()).FirstOrDefault().alpha_name</span><br />
                        }*@
                        @if ((Model.can_assessor_approve == null && Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.CANASSESSOR.ToString()].employee_delegate == requestor.id))
                        {
                            <span>@listUser.listUser.Where(p => p.id == Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.CANASSESSOR.ToString()].employee_delegate).FirstOrDefault().alpha_name</span><br />
                        }
                        else if (Model.can_assessor_approve != null && Model.can_assessor_approve.Substring(0, 1) == "d")
                        {
                            <span>@listUser.listUser.Where(p => p.id == Model.can_assessor_delegate.AsInt()).FirstOrDefault().alpha_name</span><br />
                        }
                        <span>@((Model.can_assessor_approve == null && Model.userInPTW[PermitToWork.Models.Ptw.PtwEntity.UserInPTW.CANASSESSOR.ToString()].employee_delegate == requestor.id) || (Model.can_assessor_approve != null && Model.can_assessor_approve.Substring(0, 1) == "d") ? "a/n" : "") @(listUser.listUser.Where(p => p.id == Model.can_assessor.AsInt()).FirstOrDefault().alpha_name)</span><br />
                        <strong><u>Assessor</u></strong>
                    </td>
                    <td class="td-centre">
                        @if (Model.can_assessor_approve != null && Model.can_fo_approve == null && user_ptw[6] == true && Model.has_extend == false)
                        {
                            <button class="btn btn-success" type="button" id="fo_can">Accept</button><button class="btn btn-danger" type="button" id="fo_reject_can">Reject</button><br />
                            <span id="loading_fo_can" style="display:none"><img src="/Content/Images/loading.gif" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span><br />
                        }
                        else
                        {
                            <img id="img_cancel_fo" width="50" height="50" @(Model.can_fo_approve == null ? "style=display:none;" : "style=display:inline-block;")  src="@(Model.can_fo_approve == null ? "" : Model.can_fo_approve.Substring(1))"/><br />
                        }
                        @if (Model.can_fo_approve == null && user_ptw[6] == true && Model.can_fo != requestor.id.ToString())
                        {
                                <span>@listUser.listUser.Where(p => p.id == requestor.id).FirstOrDefault().alpha_name</span><br />
                        }
                        else if (Model.can_fo_approve != null && Model.can_fo_approve.Substring(0, 1) == "d") {
                            <span>@listUser.listUser.Where(p => p.id == Model.can_fo_delegate.AsInt()).FirstOrDefault().alpha_name</span><br />
                        }
                            <span>@((Model.can_fo_approve == null && user_ptw[6] == true) || (Model.can_fo_approve != null && Model.can_fo_approve.Substring(0, 1) == "d") ? "a/n" : "") @(listUser.listUser.Where(p => p.id == Model.can_fo.AsInt()).FirstOrDefault().alpha_name)</span><br />
                        <strong><u>Facility Owner</u></strong>
                    </td>
                </tr>
            </tbody>
        </table>
                        }
}
        <br />

        <button class="btn" onclick="back()">Back</button>  
        @if (isCanEdit == true || (Model.is_guest == 1 && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.CANREQ) || Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.CANASS)
        {
        <button class="btn" onclick="save()">@(Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCSPV ? "Save" : "Save as Draft")</button>
        }
        @if ((isCanEdit == true && Model.status < (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCFO /* && !Model.has_extend && Model.id_parent_ptw == null */))
        {
        <button class="btn btn-danger" id="ptw-cancelled">Cancel PTW Request</button>
        }
        @if (((Model.is_guest != 1 && user_ptw[0] == true) || user_ptw[1] == true) && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.ACCFO && isClearenceClose == true && !Model.has_extend)
        {
        <button class="btn" onclick="cancelPtw()">Cancel PTW</button>
        }
        @if (user_ptw[6] == true && Model.status == (int)PermitToWork.Models.Ptw.PtwEntity.statusPtw.CANSPV) { 
        <button class="btn btn-warning" onclick="changeAssessor()">Change Cancellation Assessor</button>
        }
        <span id="loading" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Saving.. Please Wait..</span>
    </div>
</div>

<!-- Modal -->
<div id="rejection" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Reject" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">Reject</h3>
  </div>
  <div class="modal-body">
    <label for="comment">Comment</label><textarea id="comment"></textarea>
    <input type="hidden" id="type_reject" value="0" />
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="reject_button">Reject</button>
    <span id="loading_reject" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span>
  </div>
</div>

<!-- Modal -->
<div id="comment_assessor" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Reject" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="comment_assessorLabel">Assessor's Comment</h3>
  </div>
  <div class="modal-body">
    <label for="comment_ass">Comment</label><textarea id="comment_ass"></textarea>
    <input type="hidden" id="type_accrej" value="0" />
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="assessor_acc_rej">Send and Sign</button>
    <span id="loading_ass_acc_rej" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span>
  </div>
</div>

<!-- Modal -->
<div id="comment_fo" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Reject" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="comment_foLabel">Facility Owner's Note</h3>
  </div>
  <div class="modal-body">
    <label for="comment_ass">Notes</label><textarea id="comment_fo_notes">@Model.acc_notes_fo_ass</textarea>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="fo_save">Save and Send</button>
    <span id="loading_fo_notes" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span>
  </div>
</div>

<!-- Modal -->
<div id="loto-new" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="loto" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="loto-label">LOTO Permit</h3>
  </div>
  <div class="modal-body">
    <p>Are you want to create new LOTO or from previous LOTO?</p>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="new-loto">New LOTO</button>
    <button class="btn btn-warning" id="prev-loto">Previous LOTO</button>
  </div>
</div>

<!-- Modal -->
<div id="loto-prev" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="loto" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="loto-prev-label">Available LOTO Permit</h3>
  </div>
  <div class="modal-body">
    <p>Please select one LOTO</p>
    <input type="hidden" id="selected-id" value="0" />
    <div id="loto-prev-grid"></div>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="create-loto">Create LOTO</button>
  </div>
</div>

<!-- Modal -->
<div id="add-hira" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="loto" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="add-hira-label">Upload HIRA</h3>
  </div>
    <div class="modal-body">
        <input type="file" name="files" id="files" />
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true" type="button">Close</button>
    </div>
</div>

<!-- Modal -->
<div id="guest-name" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="loto" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="guest-name-label">Set Name And Signature</h3>
  </div>
    <form class="form-horizontal">
        <div class="modal-body">
            <div class="control-group">
                <label class="control-label" for="datepicker">Name</label>
                <div class="controls">
                  <input type="text" id="acc_requestor" value="" />
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="inputPassword">Signature</label>
                <div class="controls">
                  <input type="file" id="acc_images_uploader" name="files" />
                <input type="hidden" id="acc_images" value="" />
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
            <button class="btn btn-primary" id="save" type="button">Save</button>
            <span id="loading_set" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Saving.. Please Wait..</span>
        </div>
    </form>
</div>

<!-- Modal -->
<div id="change_assessor_modal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Reject" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="change_assessoroLabel">Change Cancellation Assessor</h3>
  </div>
  <div class="modal-body">
    <div class="control-group">
        <label class="control-label" for="datepicker">Name</label>
        <div class="controls">
            @{string fo_codes = Model.ptw_no.Split('-')[0];}
            <select id="can_assessor">
                <option value="">Choose One</option>
            @foreach (PermitToWork.Models.User.UserEntity u in listUser.listUser)
            {
                if (list_assessor.Exists(p => p.id_employee == u.id && p.assessor_code == fo_codes)) {
                    <option value="@u.id" @(Model.can_assessor == u.id.ToString() ? "selected" : "")>@u.alpha_name</option>  
                    } 
            }
            </select>
        </div>
    </div>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="change_assessor">Save and Send</button>
    <span id="loading_change_assessor" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span>
  </div>
</div>


