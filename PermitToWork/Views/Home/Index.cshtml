@{
    string p = ViewBag.p as string;
    bool isRedirect = p != null;
    PermitToWork.Models.User.UserEntity user = Session["user"] as PermitToWork.Models.User.UserEntity;
}
<script>
    $(document).ready(function () {
        addHandlerMenu();
        if ('@isRedirect' == 'True') {
            $('#content').load('@p');
        }
    })
</script>

<div id="content-header">
	<h1>Dashboard</h1>
</div>
<div id="breadcrumb">
	<a href="#" title="Go to Home" class="tip-bottom home"><i class="icon-home"></i> Home</a>
	<a href="#" class="current">Dashboard</a>
</div>
<div id="content-hazard">
    <div class="container-fluid">
        <div class="row-fluid">
            <div class="span9">
                <input class="btn" type="button" value="Add New Permit To Work" onclick="createPtw();" />
                @if (user.roles.Exists(x => x == (int)PermitToWork.Models.User.UserEntity.role.ADMINMASTERSHE)) {
                <a href="@Url.Action("ExportExcel","Home", new { area = "" })" class="btn btn-info">Export Excel</a>
                }
                <span id="loading" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Loading..</span><br />
                <br />
            </div>
            <div class="span3 text-right">
                <div class="btn-group">
                    @if (user.roles.Exists(x => x == (int)PermitToWork.Models.User.UserEntity.role.ADMINMASTERSHE))
                    {
                    <input class="btn permit-filter" id="see-my-permit" type="button" value="Mine" onclick="seeMyPermit();" />
                    }
                    <input class="btn permit-filter active" id="see-active-permit" type="button" value="Active" onclick="seeActivePermit();" />
                    <input class="btn permit-filter" id="see-overdue-permit" type="button" value="Overdue" onclick="seeOverduePermit();" />
                    <input class="btn permit-filter" id="see-all-permit" type="button" value="All" onclick="seeAllPermit();" />
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
		            <div class="widget-title">
			            <span class="icon">
				            <i class="icon-align-justify"></i>									
			            </span>
			            <h5>Permit To Work List</h5>
		            </div>
		            <div class="widget-content nopadding">
                        <div id="grid-ptw" class="span12"></div>
		            </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="warning-popup" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Reject" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="comment_assessorLabel">Warning</h3>
  </div>
  <div class="modal-body">
      <input type="hidden" id="extend-ptw-id" value="0" />
    <p>Is the extension same as before? If need new clearance permit, then this permit must be cancelled first, and open a new one.</p>
  </div>
  <div class="modal-footer">
    <button class="btn btn-primary" id="extend-ptw" onclick="extendPtw()">Yes, Create Extension</button>
    <button class="btn btn-danger" data-dismiss="modal" aria-hidden="true" >No, Don't Create</button>
  </div>
</div>

<script type="text/x-kendo-template" id="extend-template">
    <input type="button" class="btn btn-primary" value="Edit" onclick="editPtw(#= id #)"/>
    #if (status == 6 && new Date() <= validity_period_end.setDate(validity_period_end.getDate() + 1) && !has_extend && ('@user.id' == acc_ptw_requestor || '@user.id' == acc_supervisor)) {#
    <input type="button" class="btn btn-warning" value="Extend" onclick="extend(#= id #)"/>

    #}#
    #if (status >= 6) {#
    <a class="btn btn-success" href="@Url.Action("Index", "Print")?id=#= id #&type=0&no=#= ptw_no #">Print</a>
    #}#
    <input type="button" class="btn btn-success" value="Log" onclick="logPtw(#= id #)"/>
    <a href="javascript:" class="btn btn-default" title="Show Workflow" onclick="showWorkflowGeneralPermit(#= id #, '#= ptw_no #')"><img class="btn-image" src="@Url.Content("~/Content/Images/glyphicons-427-git-merge.png")" alt="workflow" /></a>   
</script>
<script type="text/x-kendo-template" id="warning-template">
    # if (will_overdue) { #
        <img width="20" height="20" src="@Url.Content("~/Img/warning.gif")" />
    # } #
</script>
<script type="text/x-kendo-template" id="template">
    <div class='employee-details'>
        Permit Status : #= ptw_status #
        <br />
        <br />
        All Clearance Permit Related:
        <ul>showWorkflowFireImpairment
            #if(loto_id != null){#<li>LOTO: <a href="\#" onclick="event.preventDefault();goToLoto(#= id #)" class="btn btn-primary">Go To LOTO Permit</a><br />Status : #= loto_statusText #<br />Log : <a href="\#" onclick="event.preventDefault();goToLog(#= cPermit['LOTO'].ids #, 1)" class="btn btn-success">LOTO Log</a></li>#}#
            #if(csep_id != null){#<li>Confined Space: <a href="\#" onclick="event.preventDefault();goToCsep(#= cPermit['CONFINEDSPACE'].ids #)" class="btn btn-primary">#= csep_no #</a> <a class="btn btn-default" href="javascript:" onclick="showWorkflowCSEP(#= cPermit['CONFINEDSPACE'].ids #, '#= csep_no #')"><img class="btn-image" src="@Url.Content("~/Content/Images/glyphicons-427-git-merge.png")" alt="workflow" /></a><br />Status : #= cPermit['CONFINEDSPACE'].statusText #<br />Log / Print : <a href="\#" onclick="event.preventDefault();goToLog(#= cPermit['CONFINEDSPACE'].ids #, 2)" class="btn btn-success">CSEP Log</a> / <a class="btn btn-primary" href='@Url.Action("Index", "Print")?id=#= cPermit['CONFINEDSPACE'].ids #&type=4&no=#= csep_no #'>Print</a></li>#}#
            #if(hw_id != null){#<li>Hot Work: <a href="\#" onclick="event.preventDefault();goToHotWork(#= cPermit['HOTWORK'].ids #)" class="btn btn-primary">#= hw_no #</a> <a class="btn btn-default" href="javascript:" onclick="showWorkflowHotWork(#= cPermit['HOTWORK'].ids #, '#= hw_no #')"><img class="btn-image" src="@Url.Content("~/Content/Images/glyphicons-427-git-merge.png")" alt="workflow" /></a><br />Status : #= cPermit['HOTWORK'].statusText #<br />Log / Print : <a href="\#" onclick="event.preventDefault();goToLog(#= cPermit['HOTWORK'].ids #, 3)" class="btn btn-success">HW Log</a> / <a class="btn btn-primary" href='@Url.Action("Index", "Print")?id=#= cPermit['HOTWORK'].ids #&type=5&no=#= hw_no #'>Print</a></li>#}#
            #if(fi_id != null){#<li>Fire Impairment: <a href="\#" onclick="event.preventDefault();goToFireImpairment(#= cPermit['FIREIMPAIRMENT'].ids #)" class="btn btn-primary">#= fi_no #</a> <a class="btn btn-default" href="javascript:" onclick="showWorkflowFireImpairment(#= cPermit['FIREIMPAIRMENT'].ids #, '#= fi_no #')"><img class="btn-image" src="@Url.Content("~/Content/Images/glyphicons-427-git-merge.png")" alt="workflow" /></a><br />Status : #= cPermit['FIREIMPAIRMENT'].statusText #<br />Log / Print : <a href="\#" onclick="event.preventDefault();goToLog(#= cPermit['FIREIMPAIRMENT'].ids #, 4)" class="btn btn-success">FI Log</a> / <a class="btn btn-primary" href='@Url.Action("Index", "Print")?id=#= cPermit['FIREIMPAIRMENT'].ids #&type=7&no=#= fi_no #'>Print</a></li>#}#
            #if(ex_id != null){#<li>Excavation: <a href="\#" onclick="event.preventDefault();goToExcavation(#= cPermit['EXCAVATION'].ids #)" class="btn btn-primary">#= ex_no #</a> <a class="btn btn-default" href="javascript:" onclick="showWorkflowExcavation(#= cPermit['EXCAVATION'].ids #, '#= ex_no #')"><img class="btn-image" src="@Url.Content("~/Content/Images/glyphicons-427-git-merge.png")" alt="workflow" /></a><br />Status : #= cPermit['EXCAVATION'].statusText #</li><br />Log / Print : <a href="\#" onclick="event.preventDefault();goToLog(#= cPermit['EXCAVATION'].ids #, 5)" class="btn btn-success">EX Log</a> / <a class="btn btn-primary" href='@Url.Action("Index", "Print")?id=#= cPermit['EXCAVATION'].ids #&type=6&no=#= ex_no #'>Print</a>#}#
            #if(wh_id != null){#<li>Working at Height: <a href="\#" onclick="event.preventDefault();goToWorkingHeight(#= cPermit['WORKINGHEIGHT'].ids #)" class="btn btn-primary">#= wh_no #</a> <a class="btn btn-default" href="javascript:" onclick="showWorkflowWorkingAtHeight(#= cPermit['WORKINGHEIGHT'].ids #, '#= wh_no #')"><img class="btn-image" src="@Url.Content("~/Content/Images/glyphicons-427-git-merge.png")" alt="workflow" /></a><br />Status : #= cPermit['WORKINGHEIGHT'].statusText #</li><br />Log / Print : <a href="\#" onclick="event.preventDefault();goToLog(#= cPermit['WORKINGHEIGHT'].ids #, 6)" class="btn btn-success">WH Log</a> / <a class="btn btn-primary" href='@Url.Action("Index", "Print")?id=#= cPermit['WORKINGHEIGHT'].ids #&type=8&no=#= wh_no #'>Print</a>#}#
            #if(rad_id != null){#<li>Radiography: <a href="\#" onclick="event.preventDefault();goToRadiography(#= cPermit['RADIOGRAPHY'].ids #)" class="btn btn-primary">#= rad_no #</a> <a class="btn btn-default" href="javascript:" onclick="showWorkflowRadiography(#= cPermit['RADIOGRAPHY'].ids #, '#= rad_no #')"><img class="btn-image" src="@Url.Content("~/Content/Images/glyphicons-427-git-merge.png")" alt="workflow" /></a><br />Status : #= cPermit['RADIOGRAPHY'].statusText #</li><br />Log / Print : <a href="\#" onclick="event.preventDefault();goToLog(#= cPermit['RADIOGRAPHY'].ids #, 7)" class="btn btn-success">Rad Log</a> / <a class="btn btn-primary" href='@Url.Action("Index", "Print")?id=#= cPermit['RADIOGRAPHY'].ids #&type=9&no=#= rad_no #'>Print</a>#}#
        </ul>
    </div>
</script>

@section scripts
{
<script src="@Url.Content("~/Scripts/lib/jquery.workflow-diagram.js")"></script>

<script id="workflow-csep-template" type="text/x-kendo-template">
     @{ Html.RenderPartial("~/Views/Workflow/CSEP.cshtml"); }
</script>

<script id="workflow-hot-work-template" type="text/x-kendo-template">
     @{ Html.RenderPartial("~/Views/Workflow/HotWork.cshtml"); }
</script>

<script id="workflow-fire-impairment-template" type="text/x-kendo-template">
     @{ Html.RenderPartial("~/Views/Workflow/FireImpairment.cshtml"); }
</script>

<script id="workflow-general-permit-template" type="text/x-kendo-template">
     @{ Html.RenderPartial("~/Views/Workflow/GeneralPermit.cshtml"); }
</script>
    
<script id="workflow-excavation-template" type="text/x-kendo-template">
     @{ Html.RenderPartial("~/Views/Workflow/Excavation.cshtml"); }
</script>
    
<script id="workflow-radiography-template" type="text/x-kendo-template">
     @{ Html.RenderPartial("~/Views/Workflow/Radiography.cshtml"); }
</script>
    
<script id="workflow-wh-template" type="text/x-kendo-template">
     @{ Html.RenderPartial("~/Views/Workflow/WorkingAtHeight.cshtml"); }
</script>
    
<script>
    var isNeedClose = "";
    var day = new Date();
    day.setDate(day.getDate() + 1);
    $(document).ready(function () {
        var crudServiceBaseUrl = "Home",
            dataSourceIn = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: crudServiceBaseUrl + "/Binding",
                        type: "POST",
                        data: { type: "1" },
                        dataType: "json",
                        complete: function (e) {
                            var resp = JSON.parse(e.responseText);
                            console.log(resp);
                            for (var i in resp) {
                                if (resp[i].isNeedClose) {
                                    isNeedClose += resp[i].ptw_no + ", ";
                                }
                            }
                        }
                    },
                    //parameterMap: function (options, operation) {
                    //    if (operation !== "read" && options.models) {
                    //        return { models: kendo.stringify(options.models) };
                    //    }
                    //}
                },
                batch: true,
                pageSize: 30,
                schema: {
                    model: {
                        id: "id",
                        fields: {
                            id: { type: "number", editable: false },
                            ptw_no: { type: "string", nullable: "true" },
                            ptw_status: { type: "string", nullable: "true", editable : false },
                            status: { type: "number", editable: false },
                            hw: {},
                            rad: {},
                            fi: {},
                            hw_no: { type: "string", editable: false },
                            hw_id: { type: "number", editable: false, nullable: "true" },
                            validity_period_end: { type: "date", editable: false, nullable: "true" },
                            has_extend: { type: "boolean", editable: false },
                            is_extend: { type: "boolean", editable: false }
                        }
                    }
                },
                pageSize: 10
            });

        $("#grid-ptw").kendoGrid({
            dataSource: dataSourceIn,
            pageable: {
                refresh: true,
            },
            sortable: true,
            filterable: true,
            detailTemplate: kendo.template($("#template").html()),
            detailInit: detailInit,
            dataBound: onDataBound,
            columns: [
                { field: "ptw_no", title: "PTW Number", type: "string", width: 250 },
                { field: "will_overdue", title: "Stat", template: kendo.template($("#warning-template").html()), filterable : false, width: 45 },
                { field: "work_description", title: "Description", type: "string" },
                { field: "ptw_status", title: "PTW Status", type: "string" },
                { title: "Command", template: kendo.template($("#extend-template").html()), width: 180 },
                //{
                //    command: [
                //        {
                //            name: "Edit",
                //            click: editPtw
                //        },
                //        {
                //            template: kendo.template($("#extend-template").html()),
                //            name: "Extend",
                //            click: extendPtw
                //        },s
                //    ],
                //    editable: {
                //        destroy: false
                //    },
                //    width: 180
                //}
            ],
            height: 400
        });

        function detailInit(e) {
            var detailRow = e.detailRow;
        }

        function onDataBound(e) {
            dataView = this.dataSource.view();
            for (var i in dataView) {
                if (dataView[i].has_extend) {
                    var uid = dataView[i].uid;
                    var uid1 = dataView[i].bomc;
                    $("#grid-ptw tbody").find("tr[data-uid=" + uid + "]").css("background-color", "lightblue");
                }

                if (dataView[i].status == 11) {
                    var uid = dataView[i].uid;
                    var uid1 = dataView[i].bomc;
                    $("#grid-ptw tbody").find("tr[data-uid=" + uid + "]").css("background-color", "pink");
                }
            }
        }

        function getDataRowGrid(e) {
            return $(e.target).closest("tr");
        }


    });

    function editPtw(e) {
        //var data = this.dataItem(getDataRowGrid(e));
        var data = e;
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Edit","Ptw")/' + e, '_blank');
        // $('#content').load('Ptw/Edit/', { id: e });
    }

    function extend(e) {
        $('#extend-ptw-id').val(e);
        $('#warning-popup').modal('show');
    }

    function extendPtw() {
        //var r = confirm('Are you sure want to extend this Permit To Work?');
            //var data = this.dataItem(getDataRowGrid(e));
        var data = $('#extend-ptw-id').val();

        $.post('Ptw/Extends', { id: data }, function (resp) {
            if (resp.status == "401" || resp.status == "402" || resp.status == "403") {

            } else {
                $('#warning-popup').modal('hide');
                // window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Extend","Ptw")/' + data, '_blank');
                $('#content').load('@Url.Action("Extend","Ptw")/' + data);
            }
        });
    }

    function logPtw(id) {
        $('#history').val('@Url.Action("Index", "Home")');
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Log","Log")?id=' + id + '&permitType=' + 0 + '&backPath=' + '@Url.Action("Index", "Home")', '_blank');
        // $('#content').load('@Url.Action("Log", "Log")?id=' + id + '&permitType=' + 0 + '&backPath=' + '@Url.Action("Index", "Home")');
    }

    function createPtw() {
        $('#loading').show();
        $.post('@Url.Action("BindingOwnRequest","Home")', { type: '2' }, function (resp) {
            var resp = resp;
            console.log(resp);
            isNeedClose = "";
            for (var i in resp) {
                if (resp[i].isNeedClose) {
                    isNeedClose += resp[i].ptw_no + ", ";
                }
            }

            $('#loading').hide();
            if (isNeedClose == "") {
                $('#history').val('@Url.Action("Index", "Home")');
                $('#content').load('@Url.Action("Create", "Ptw")');
            } else {
                isNeedClose = isNeedClose.substr(0, isNeedClose.length - 2);
                alert("You must close existing Permit. Existing Overdue Permit: " + isNeedClose);
            }
        });
    }

    function goToHotWork(id) {
        $('#history').val('@Url.Action("Index", "Home")');
        // $('#content').load('@Url.Action("Edit", "Hw")/' + id);
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Edit", "Hw")/' + id, '_blank');
    }

    function goToFireImpairment(id) {
        $('#history').val('@Url.Action("Index", "Home")');
        // $('#content').load('@Url.Action("Edit", "Fi")/' + id);
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Edit", "Fi")/' + id, '_blank');
    }

    function goToRadiography(id) {
        $('#history').val('@Url.Action("Index", "Home")');
        // $('#content').load('@Url.Action("Edit", "Radiography")/' + id);
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Edit", "Radiography")/' + id, '_blank');
    }

    function goToCsep(id) {
        $('#history').val('@Url.Action("Index", "Home")');
        // $('#content').load('@Url.Action("Edit", "Csep")/' + id);
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Edit", "Csep")/' + id, '_blank');
    }

    function goToExcavation(id) {
        $('#history').val('@Url.Action("Index", "Home")');
        // $('#content').load('@Url.Action("Edit", "Excavation")/' + id);
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Edit", "Excavation")/' + id, '_blank');
    }

    function goToWorkingHeight(id) {
        $('#history').val('@Url.Action("Index", "Home")');
        // $('#content').load('@Url.Action("Edit", "WorkingHeight")/' + id);
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Edit", "WorkingHeight")/' + id, '_blank');
    }

    function goToLoto(id) {
        $('#history').val('@Url.Action("Index", "Home")');
        $('#content').load('@Url.Action("Index", "Loto")/' + id);
    }

    function goToLog(id, permitType) {
        $('#history').val('@Url.Action("Index", "Home")');
        // $('#content').load('@Url.Action("Log", "Log")?id=' + id + '&permitType=' + permitType + '&backPath=' + '@Url.Action("Index","Home")');
        window.open('@Url.Action("Page","Home")?p=' + '@Url.Action("Log", "Log")?id=' + id + '&permitType=' + permitType + '&backPath=' + '@Url.Action("Index","Home")', '_blank');
    }

    function seeMyPermit() {
        $('.permit-filter').removeClass('active');
        $('#see-my-permit').addClass('active');
        $("#grid-ptw").data('kendoGrid').dataSource.read({ type: "3" });
    }

    function seeActivePermit() {
        $('.permit-filter').removeClass('active');
        $('#see-active-permit').addClass('active');
        $("#grid-ptw").data('kendoGrid').dataSource.read({ type : "1" });
    }

    function seeOverduePermit() {
        $('.permit-filter').removeClass('active');
        $('#see-overdue-permit').addClass('active');
        $("#grid-ptw").data("kendoGrid").dataSource.read({ type: "2" });
    }

    function seeAllPermit() {
        $('.permit-filter').removeClass('active');
        $('#see-all-permit').addClass('active');
        $("#grid-ptw").data("kendoGrid").dataSource.read({ type: "0" });
    }

    //WORKFLOW
    //CSEP workflow
    function showWorkflowCSEP(id, num) {
        var workflowObject = $('#workflow-csep');

        if (!workflowObject.length) { //create element if not exist
            workflowObject = $(document.createElement('div')).attr('id', 'workflow-csep').appendTo('body');
            workflowObject.workflowDiagram({
                template: kendo.template($("#workflow-csep-template").html()),
                url: '@Url.Action("CSEP", "Workflow")',
            });
        }

        workflowObject.workflowDiagram('reload', id, num);
        workflowObject.workflowDiagram('show');
    }

    //hot work workflow    
    function showWorkflowHotWork(id, num) {
        var workflowObject = $('#workflow-hot-work');

        console.log(workflowObject);
        if (!workflowObject.length) { //create element if not exist
            console.log(1);
            workflowObject = $(document.createElement('div')).attr('id', 'workflow-hot-work').appendTo('body');
            workflowObject.workflowDiagram({
                template: kendo.template($("#workflow-hot-work-template").html()),
                url: '@Url.Action("HotWork", "Workflow")',
            });
        }

        workflowObject.workflowDiagram('reload', id, num);
        workflowObject.workflowDiagram('show');
    }

    //fire impairment workflow
    function showWorkflowFireImpairment(id, num) {
        var workflowObject = $('#workflow-fire-impairment');

        if (!workflowObject.length) { //create element if not exist
            workflowObject = $(document.createElement('div')).attr('id', 'workflow-fire-impairment').appendTo('body');
            workflowObject.workflowDiagram({
                template: kendo.template($("#workflow-fire-impairment-template").html()),
                url: '@Url.Action("FireImpairment", "Workflow")',
            });
        }

        workflowObject.workflowDiagram('reload', id, num);
        workflowObject.workflowDiagram('show');
    }

    //general permit workflow
    function showWorkflowGeneralPermit(id, num) {
        var workflowObject = $('#workflow-general-permit');

        if (!workflowObject.length) { //create element if not exist
            workflowObject = $(document.createElement('div')).attr('id', 'workflow-general-permit').appendTo('body');
            workflowObject.workflowDiagram({
                template: kendo.template($("#workflow-general-permit-template").html()),
                url: '@Url.Action("GeneralPermit", "Workflow")',
            });
        }

        workflowObject.workflowDiagram('reload', id, num);
        workflowObject.workflowDiagram('show');
    }

    //excavation workflow
    function showWorkflowExcavation(id, num) {
        var workflowObject = $('#workflow-excavation');

        if (!workflowObject.length) { //create element if not exist
            workflowObject = $(document.createElement('div')).attr('id', 'workflow-excavation').appendTo('body');
            workflowObject.workflowDiagram({
                template: kendo.template($("#workflow-excavation-template").html()),
                url: '@Url.Action("Excavation", "Workflow")',
            });
        }

        workflowObject.workflowDiagram('reload', id, num);
        workflowObject.workflowDiagram('show');
    }

    //radiography workflow
    function showWorkflowRadiography(id, num) {
        var workflowObject = $('#workflow-radiography');

        if (!workflowObject.length) { //create element if not exist
            workflowObject = $(document.createElement('div')).attr('id', 'workflow-radiography').appendTo('body');
            workflowObject.workflowDiagram({
                template: kendo.template($("#workflow-radiography-template").html()),
                url: '@Url.Action("Radiography", "Workflow")',
            });
        }

        workflowObject.workflowDiagram('reload', id, num);
        workflowObject.workflowDiagram('show');
    }

    //working at height workflow
    function showWorkflowWorkingAtHeight(id, num) {
        var workflowObject = $('#workflow-wh');

        if (!workflowObject.length) { //create element if not exist
            workflowObject = $(document.createElement('div')).attr('id', 'workflow-wh').appendTo('body');
            workflowObject.workflowDiagram({
                template: kendo.template($("#workflow-wh-template").html()),
                url: '@Url.Action("WorkingAtHeight", "Workflow")',
                callback: function (self, data) {
                    $.post('@Url.Action("WHShowInspector", "Workflow")', { id: id }, function (isInspectorExist) {
                        if (isInspectorExist === 'False') { //hide inspector approve
                            self.element.find('div[data-node-name=INSPECTOR_APPROVE]').hide();

                            self.element.find('div[data-node-name=ERECTOR_REQUESTOR_APPROVE]').removeClass('workflow-col-3');
                            self.element.find('div[data-node-name=ERECTOR_REQUESTOR_APPROVE]').addClass('workflow-col-2');

                            self.element.find('div[data-node-name=SUPERVISOR_APPROVE]').removeClass('workflow-col-4');
                            self.element.find('div[data-node-name=SUPERVISOR_APPROVE]').addClass('workflow-col-3');

                            self.element.find('div[data-node-name=FACILITY_OWNER_APPROVE]').removeClass('workflow-col-5');
                            self.element.find('div[data-node-name=FACILITY_OWNER_APPROVE]').addClass('workflow-col-4');
                        } else {
                            self.element.find('div[data-node-name=INSPECTOR_APPROVE]').show();

                            self.element.find('div[data-node-name=ERECTOR_REQUESTOR_APPROVE]').removeClass('workflow-col-2');
                            self.element.find('div[data-node-name=ERECTOR_REQUESTOR_APPROVE]').addClass('workflow-col-3');

                            self.element.find('div[data-node-name=SUPERVISOR_APPROVE]').removeClass('workflow-col-3');
                            self.element.find('div[data-node-name=SUPERVISOR_APPROVE]').addClass('workflow-col-4');

                            self.element.find('div[data-node-name=FACILITY_OWNER_APPROVE]').removeClass('workflow-col-4');
                            self.element.find('div[data-node-name=FACILITY_OWNER_APPROVE]').addClass('workflow-col-5');
                        }
                    });
                },
            });
        }

        workflowObject.workflowDiagram('reload', id, num);
        workflowObject.workflowDiagram('show');
    }    
</script>
}