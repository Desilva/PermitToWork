@model PermitToWork.Models.ClearancePermit.LotoEntity
@{
    bool[] isCanEdit = ViewBag.isCanEdit as bool[];
    List<PermitToWork.Models.mst_loto_point> listLotoPoint = ViewBag.listLotoPoint as List<PermitToWork.Models.mst_loto_point>;
    List<PermitToWork.Models.User.UserEntity> listUser = ViewBag.listUser as List<PermitToWork.Models.User.UserEntity>;
}
<style>
    .k-grid  .k-grid-header  .k-header  .k-link {
        height: auto;
    }
  
    .k-grid  .k-grid-header  .k-header {
        white-space: normal;
    }
</style>
<div id="content-header">
	<h1>LOTO PERMIT FORM</h1>
</div>
<div id="breadcrumb">
	<a href="#" title="Go to Home" class="tip-bottom home"><i class="icon-home"></i> Home</a>
	<a href="#"  class="tip-bottom ptw">LOTO</a>
    <a href="#" class="current">Create</a>
</div>

<div style="overflow-x:scroll; position:relative;">
    <div>
        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span3 logo">
                    <img src="../../Img/logo-clean.png" />
                </div>
                <div class="span6 title">
                    <b>LOTO PERMIT FORM</b><br />
                    Star Energy Geothermal (Wayang Windu) Limited
                </div>
                <div class="span3 no">
                    <br /><i>No : @Model.loto_no</i>
                </div> 
            </div>
            <div class="row-fluid separator"></div>
        </div>
        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span6">
                   <h5>1. LOTO POINT APPLICATIONS SHEET</h5>
                </div>
            </div>
            <div class="row-fluid">
                <table class="table">
                    <tr>
                        <td style="width:30%">
                            Work Location: 
                        </td>
                        <td>
                            <input type="hidden" class="" id="id_loto" value="@ViewBag.id_loto" />
                            <input type="text" class="" id="work-location" value="@Model.work_location" @(isCanEdit[0] ? "" : "disabled") />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%">
                            Requestor's Supervisor: 
                        </td>
                        <td>
                            <input type="text" class="" id="supervisor" value="@(Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.SUPERVISOR.ToString()] != null ? Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.SUPERVISOR.ToString()].alpha_name : "")" disabled />
                        </td>
                    </tr>
                </table>
            </div>
            <div class="row-fluid">
                <div id="grid-loto-point" class="span12"></div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    NOTE: Column <small><i>(b,c,d,e) must be filled by requestor; Column (f,g,h,j)fill by facility owner; Column (i) must be filled by requestor</i></small>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    Attachment(s)
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <input name="files" id="file-attachment" type="file" class="radiography-file" />
                    <ul id="existing-files-attachment" class="k-upload-files k-reset" style="display: none;">
                        @foreach (string file in Model.listDocumentUploaded[PermitToWork.Models.WorkingHeight.WorkingHeightEntity.DocumentUploaded.ATTACHMENT.ToString()])
                        {
                        <li class="k-file" data-att-id="@(file)">
                            <span class="k-icon k-success">uploaded</span>
                            <span class="k-filename" title="@(file)"><a href="@Url.Content("~/Upload/Loto/Attachment/" + Model.id + "/" + file)" target="_blank">@file</a><span class="k-progress"><span class="k-state-selected k-progress-status" style="width: 100%;"></span></span></span>
                            <button type="button" class="k-button k-button-icontext k-upload-action" @(isCanEdit[0] || isCanEdit[6]) ? "" : "disabled")><span class="k-icon k-delete"></span>Remove</button>
                        </li>
                        }
                    </ul>
                </div>

            </div>
            <div class="row-fluid">
                <table class="table">
                    <tr>
                        <td style="width:30%">
                            <b>Box No: </b>
                        </td>
                        <td>
                            <input type="hidden" id="lock-box-hid" value="@Model.lock_box_no" />
                            <select id="lock-box-no"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%">
                            <b>Initial Qty of Pad Lock: </b>
                        </td>
                        <td>
                            <input type="number" class="" id="initial-pad-lock" value="@Model.initial_pad_lock" disabled />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%">
                            <b>Qty of Pad Lock Usage: </b>
                        </td>
                        <td>
                            <input type="number" class="" id="pad-lock-usage" value="@(Model.qty_pad_lock_usage == null ? 0 : Model.qty_pad_lock_usage)" @(isCanEdit[1] || isCanEdit[6] ? "" : "disabled") />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%">
                            <b>Balance (remaining pad lock in the box): </b>
                        </td>
                        <td>
                            <input type="number" class="" id="balance" value="@Model.balance" @(isCanEdit[1] || isCanEdit[6] ? "" : "disabled") />
                        </td>
                    </tr>
                </table>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th colspan="5" class="title-form" style="text-align:left"><b>2. LOTO PERMIT APPROVAL <small><i>(LOTO point applied (energy isolation/ de-energized) on site has been verified and I confirm that LOTO point has meet requirement to control energy and I have locked the lock box)</i></small></b></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="2">Approval Date / Time: @(Model.approval_date != null ? Model.approval_date.Value.ToString("MM/dd/yyyy hh:mm tt") : "")</td>
                                <td colspan="3" class="text-center">Oncoming Permit Holder</td>
                            </tr>
                            <tr>
                                <td rowspan="@(Model.lotoComingHolder.Count > 6 ? Model.lotoComingHolder.Count + 1 : 7)" style="vertical-align:bottom;text-align:center">
                                    @if (Model.approval_supervisor_signature != null)
                                    {
                                    <img src="@Model.approval_supervisor_signature.Substring(1)" width="100" height="100" /><br />
                                    }
                                    @(Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.SUPERVISOR.ToString()] != null ? Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.SUPERVISOR.ToString()].alpha_name : "")<br />
                                    1<sup>st</sup> Supervisor
                                </td>
                                <td rowspan="@(Model.lotoComingHolder.Count > 6 ? Model.lotoComingHolder.Count + 1 : 7)" style="vertical-align:bottom;text-align:center">
                                    @if (Model.approval_fo_signature != null)
                                    {
                                    <img src="@Model.approval_fo_signature.Substring(1)" width="100" height="100" /><br />
                                    }
                                    @if (Model.approval_fo_signature != null && Model.approval_fo_signature.Substring(0,1) == "d") {
                                        <text>@Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.APPROVALFACILITYOWNERDELEGATE.ToString()].alpha_name<br />a/n </text>
                                    }
                                    @(Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.APPROVALFACILITYOWNER.ToString()] != null ? Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.APPROVALFACILITYOWNER.ToString()].alpha_name : "")<br />
                                    Facility Owner
                                </td>
                                <td>No</td>
                                <td>Name + Sign</td>
                                <td>Date / Time</td>
                            </tr>

                                @if (Model.lotoComingHolder.Count > 6)
                                {
                                    foreach (PermitToWork.Models.ClearancePermit.LotoComingHolderEntity comingHolder in Model.lotoComingHolder)
                                    {
                            <tr>
                                <td class="text-center">@comingHolder.no_holder</td>
                                <td class="text-center">
                                    @if (comingHolder.holder_sign_approval != null)
                                    {
                                        <img width="25" height="25" src="@comingHolder.holder_sign_approval.Substring(1)" /><br />
                                    }
                                    @if (comingHolder.holder_sign_approval != null && comingHolder.holder_sign_approval.Substring(0, 1) == "d")
                                    {
                                        @comingHolder.userApprovalDelegate.alpha_name;
                                    }
                                    @(comingHolder.holder_sign_approval != null && comingHolder.holder_sign_approval.Substring(0, 1) == "d" ? "a/n" : "") @comingHolder.userEntity.alpha_name
                                </td>
                                <td class="text-center">@(comingHolder.holder_date_approval != null ? comingHolder.holder_date_approval.Value.ToString("MM/dd/yyyy hh:mm tt") : "")</td>
                            </tr>
                                    }
                                }
                                else
                                {
                                    int count = 6 - Model.lotoComingHolder.Count;
                                    int prevNo = 1;
                                    foreach (PermitToWork.Models.ClearancePermit.LotoComingHolderEntity comingHolder in Model.lotoComingHolder)
                                    {
                                        prevNo = comingHolder.no_holder.Value;
                            <tr>
                                <td class="text-center">@comingHolder.no_holder</td>
                                <td class="text-center">
                                    @if (comingHolder.holder_sign_approval != null)
                                    {
                                        <img width="25" height="25" src="@comingHolder.holder_sign_approval.Substring(1)" /><br />
                                    }
                                    @if (comingHolder.holder_sign_approval != null && comingHolder.holder_sign_approval.Substring(0, 1) == "d")
                                    {
                                        @comingHolder.userApprovalDelegate.alpha_name;
                                    }
                                    @(comingHolder.holder_sign_approval != null && comingHolder.holder_sign_approval.Substring(0, 1) == "d" ? "a/n" : "") @comingHolder.userEntity.alpha_name
                                </td>
                                <td class="text-center">@(comingHolder.holder_date_approval != null ? comingHolder.holder_date_approval.Value.ToString("MM/dd/yyyy hh:mm tt") : "")</td>
                            </tr>
                                    }
                                    for (int i = prevNo + 1; i <= 7; i++)
                                    {
                            <tr>
                                <td class="text-center">@i</td>
                                <td class="text-center">
                                </td>
                                <td class="text-center"></td>
                            </tr>
                                    }
                                }
                            <tr>
                                <td colspan="5">
                                    Note:
                                    <textarea class="table-textarea" id="approval-notes" @(isCanEdit[3] || isCanEdit[4] || isCanEdit[5] ? "" : "disabled") >@Model.approval_notes</textarea>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    @if (isCanEdit[2])
                    {
                        <input type="button" class="btn btn-success" value="Save and Send to Approve" id="save-approval" />
                    }

                    @if (isCanEdit[3] || isCanEdit[4])
                    {
                        <input type="button" class="btn btn-success" value="Save and Approve" id="save-approve" data-who="@(isCanEdit[3] ? 1 : (isCanEdit[4] ? 2 : 0))" />
                    }

                    @if (isCanEdit[5])
                    {
                        <input type="button" class="btn btn-success" value="Approve" id="approve-coming-holder" />
                        <input type="button" class="btn btn-warning" value="Change Point" id="change-point" />
                    }
                </div>
                <div class="span12">
                    &nbsp;
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th colspan="5" class="title-form" style="text-align:left"><b>3. LOTO SUSPENSION <small><i>(I confirm that I have verified the changed of LOTO point and I have re-locked the lock box ; Requestor responsible to coordinate with any other LOTO Holder)</i></small></b></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="2">Suspended Requestor: @(Model.lotoSuspension.LastOrDefault() != null ? Model.lotoSuspension.LastOrDefault().requestorUser.alpha_name : "")</td>
                                <td colspan="3" class="text-center">Oncoming Permit Holder</td>
                            </tr>
                            <tr>
                                
                            </tr>
                            <tr>
                                <td rowspan="7" style="vertical-align:bottom;text-align:center">
                                    @if (Model.lotoSuspension.LastOrDefault() != null && Model.lotoSuspension.LastOrDefault().requestor_signature != null)
                                    {
                                    <img src="@Model.lotoSuspension.LastOrDefault().requestor_signature" width="100" height="100" /><br />
                                    }
                                    @(Model.lotoSuspension.LastOrDefault() != null ? Model.lotoSuspension.LastOrDefault().requestorUser.alpha_name : "")<br />
                                    Requestor</td>
                                <td rowspan="7" style="vertical-align:bottom;text-align:center">
                                    @if (Model.lotoSuspension.LastOrDefault() != null && Model.lotoSuspension.LastOrDefault().fo_signature != null)
                                    {
                                    <img src="@Model.lotoSuspension.LastOrDefault().fo_signature" width="100" height="100" /><br />
                                    }
                                    @if (Model.lotoSuspension.LastOrDefault() != null)
                                    {
                                        PermitToWork.Models.ClearancePermit.LotoSuspensionEntity suspension = Model.lotoSuspension.LastOrDefault();
                                        if (suspension.foUser != null)
                                        {
                                        <text>@suspension.foUser.alpha_name<br /></text>    
                                        }
                                    }
                                    Facility Owner</td>
                                <td>No</td>
                                <td>Name + Sign</td>
                                <td>Date / Time</td>
                            </tr>
                            @if (Model.lotoSuspension.LastOrDefault() != null)
                            {
                                PermitToWork.Models.ClearancePermit.LotoSuspensionEntity suspension = Model.lotoSuspension.LastOrDefault();
                                if (suspension.suspensionHolder.Count > 6)
                                {
                                    foreach (PermitToWork.Models.ClearancePermit.LotoSuspensionHolderEntity suspensionHolder in suspension.suspensionHolder)
                                    {
                            <tr>
                                <td class="text-center">@suspensionHolder.no_holder</td>
                                <td class="text-center">
                                    @if (suspensionHolder.holder_sign_approval != null)
                                    {
                                        <img width="25" height="25" src="@suspensionHolder.holder_sign_approval.Substring(1)" /><br />
                                    }
                                    @if (suspensionHolder.holder_sign_approval != null && suspensionHolder.holder_sign_approval.Substring(0, 1) == "d")
                                    {
                                        @suspensionHolder.userApprovalDelegate.alpha_name;
                                    }
                                    @(suspensionHolder.holder_sign_approval != null && suspensionHolder.holder_sign_approval.Substring(0, 1) == "d" ? "a/n" : "") @suspensionHolder.userEntity.alpha_name
                                </td>
                                <td class="text-center">@(suspensionHolder.holder_date_approval != null ? suspensionHolder.holder_date_approval.Value.ToString("MM/dd/yyyy hh:mm tt") : "")</td>
                            </tr>
                                    }
                                }
                                else
                                {
                                    int count = 6 - Model.lotoComingHolder.Count;
                                    int prevNo = 1;
                                    foreach (PermitToWork.Models.ClearancePermit.LotoSuspensionHolderEntity suspensionHolder in suspension.suspensionHolder)
                                    {
                                        prevNo = suspensionHolder.no_holder.Value;
                            <tr>
                                <td class="text-center">@suspensionHolder.no_holder</td>
                                <td class="text-center">
                                    @if (suspensionHolder.holder_sign_approval != null)
                                    {
                                        <img width="25" height="25" src="@suspensionHolder.holder_sign_approval.Substring(1)" /><br />
                                    }
                                    @if (suspensionHolder.holder_sign_approval != null && suspensionHolder.holder_sign_approval.Substring(0, 1) == "d")
                                    {
                                        @suspensionHolder.userApprovalDelegate.alpha_name;
                                    }
                                    @(suspensionHolder.holder_sign_approval != null && suspensionHolder.holder_sign_approval.Substring(0, 1) == "d" ? "a/n" : "") @suspensionHolder.userEntity.alpha_name
                                </td>
                                <td class="text-center">@(suspensionHolder.holder_date_approval != null ? suspensionHolder.holder_date_approval.Value.ToString("MM/dd/yyyy hh:mm tt") : "")</td>
                            </tr>
                                    }
                                    for (int i = prevNo + 1; i <= 7; i++)
                                    {
                            <tr>
                                <td class="text-center">&nbsp;</td>
                                <td class="text-center">
                                </td>
                                <td class="text-center"></td>
                            </tr>
                                    }
                                }
                            } else {
                                for (int i = 2; i <= 7; i++)
                                {
                            <tr>
                                <td class="text-center">&nbsp;</td>
                                <td class="text-center">
                                </td>
                                <td class="text-center"></td>
                            </tr>
                                }
                            }
                            <tr>
                                <td colspan="5">
                                    Note:
                                    @foreach (PermitToWork.Models.ClearancePermit.LotoSuspensionEntity suspension in Model.lotoSuspension)
                                    {
                                        <h5>@suspension.suspend_no</h5>
                                        <p>@suspension.notes</p>
                                        <hr />
                                    }
                                    <textarea class="table-textarea" id="suspension-notes" @(isCanEdit[17] ? "" : "disabled")>@(Model.lotoSuspension.LastOrDefault() != null ? Model.lotoSuspension.LastOrDefault().notes : "")</textarea>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    @if (isCanEdit[16])
                    {
                        <input type="button" class="btn btn-warning" id="request-suspension" value="Request Suspension" />
                    }
                    @if (isCanEdit[17])
                    {
                        <input type="button" class="btn btn-success" id="approval-suspension" value="Send to Agree Suspension" />
                    }
                    @if (isCanEdit[18])
                    {
                        <input type="button" class="btn btn-success" id="agree-suspension" value="Agree Suspension" />
                        <input type="button" class="btn btn-danger" id="reject-suspension" value="Reject Suspension" />
                    }
                    @if (isCanEdit[19])
                    {
                        <input type="button" class="btn btn-success" id="save-suspension" value="Save" />
                    }
                    @if (isCanEdit[20])
                    {
                        <input type="button" class="btn btn-success" id="approve-suspension" value="Approve" />
                    }
                    @if (isCanEdit[21])
                    {
                        <input type="button" class="btn btn-success" id="approve-fo-suspension" value="Approve" />
                    }
                    @if (isCanEdit[22])
                    {
                        <input type="button" class="btn btn-warning" id="complete-suspension" value="Cancel Suspension" />
                    }
                    @if (isCanEdit[23])
                    {
                        <input type="button" class="btn btn-warning" id="send-complete-suspension" value="Request Agree Suspension Cancellation" />
                    }
                    @if (isCanEdit[24])
                    {
                        <input type="button" class="btn btn-warning" id="agree-complete-suspension" value="Agree Suspension Cancellation" />
                    }
                    @if (isCanEdit[25])
                    {
                        <input type="button" class="btn btn-warning" id="send-inspect-complete-suspension" value="Send to Inspect" />
                    }
                    @if (isCanEdit[26])
                    {
                        <input type="button" class="btn btn-success" id="inspect-complete-suspension" value="Save and Approve" />
                    }
                </div>
                <div class="span12">
                    &nbsp;
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th colspan="5" class="title-form" style="text-align:left"><b>4. LOTO CANCELATION <small><i>(Supervisor confirm LOTO permit return back to Facility OWNER / GlaFR have been sign by all my parties; Facility Owner allow to return back plant to normal condition)</i></small></b></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="2">Cancelation Date: @(Model.cancellation_fo_signature_date != null ? Model.cancellation_fo_signature_date.Value.ToString("dd MMM yyyy hh:mm tt") : "")</td>
                                <td colspan="3" class="text-center">Oncoming Permit Holder</td>
                            </tr>
                            <tr>
                                <td rowspan="@(Model.lotoComingHolder.Count > 6 ? Model.lotoComingHolder.Count + 1 : 7)" style="vertical-align:bottom;text-align:center">
                                    @if (Model.cancellation_supervisor_signature != null)
                                    {
                                    <img src="@Model.cancellation_supervisor_signature" width="100" height="100" /><br />
                                    }
                                    @(Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.SUPERVISOR.ToString()] != null ? Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.SUPERVISOR.ToString()].alpha_name : "")<br />
                                    Requestor's Supervisor</td>
                                <td rowspan="@(Model.lotoComingHolder.Count > 6 ? Model.lotoComingHolder.Count + 1 : 7)" style="vertical-align:bottom;text-align:center">
                                    @if (Model.cancellation_fo_signature != null)
                                    {
                                    <img src="@Model.cancellation_fo_signature" width="100" height="100" /><br />
                                    }
                                    @if (Model.cancellation_fo_signature != null && Model.cancellation_fo_signature.Substring(0, 1) == "d")
                                    {
                                        <text>@Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.CANCELLATIONFACILITYOWNERDELEGATE.ToString()].alpha_name<br />a/n </text>
                                    }
                                    @(Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.CANCELLATIONFACILITYOWNER.ToString()] != null ? Model.listUserInLOTO[PermitToWork.Models.ClearancePermit.LotoEntity.userInLOTO.CANCELLATIONFACILITYOWNER.ToString()].alpha_name : "")<br />
                                    Facility Owner</td>
                                <td>No</td>
                                <td>Name + Sign</td>
                                <td>Date / Time</td>
                            </tr>
                            @if (Model.lotoComingHolder.Count > 6)
                                {
                                    foreach (PermitToWork.Models.ClearancePermit.LotoComingHolderEntity comingHolder in Model.lotoComingHolder)
                                    {
                            <tr>
                                <td class="text-center">@comingHolder.no_holder</td>
                                <td class="text-center">
                                    @if (comingHolder.holder_sign_cancellation != null)
                                    {
                                        <img width="25" height="25" src="@comingHolder.holder_sign_cancellation.Substring(1)" /><br />
                                    }
                                    @if (comingHolder.holder_sign_cancellation != null && comingHolder.holder_sign_cancellation.Substring(0, 1) == "d")
                                    {
                                        @comingHolder.userCancellationDelegate.alpha_name;
                                    }
                                    @(comingHolder.holder_sign_cancellation != null && comingHolder.holder_sign_cancellation.Substring(0, 1) == "d" ? "a/n" : "") @comingHolder.userEntity.alpha_name
                                </td>
                                <td class="text-center">@(comingHolder.holder_date_cancellation != null ? comingHolder.holder_date_cancellation.Value.ToString("MM/dd/yyyy hh:mm tt") : "")</td>
                            </tr>
                                    }
                                }
                                else
                                {
                                    int count = 6 - Model.lotoComingHolder.Count;
                                    int prevNo = 1;
                                    foreach (PermitToWork.Models.ClearancePermit.LotoComingHolderEntity comingHolder in Model.lotoComingHolder)
                                    {
                                        prevNo = comingHolder.no_holder.Value;
                            <tr>
                                <td class="text-center">@comingHolder.no_holder</td>
                                <td class="text-center">
                                    @if (comingHolder.holder_sign_cancellation != null)
                                    {
                                        <img width="25" height="25" src="@comingHolder.holder_sign_cancellation.Substring(1)" /><br />
                                    }
                                    @if (comingHolder.holder_sign_cancellation != null && comingHolder.holder_sign_cancellation.Substring(0, 1) == "d")
                                    {
                                        @comingHolder.userCancellationDelegate.alpha_name;
                                    }
                                    @(comingHolder.holder_sign_cancellation != null && comingHolder.holder_sign_cancellation.Substring(0, 1) == "d" ? "a/n" : "") @comingHolder.userEntity.alpha_name
                                </td>
                                <td class="text-center">@(comingHolder.holder_date_cancellation != null ? comingHolder.holder_date_cancellation.Value.ToString("MM/dd/yyyy hh:mm tt") : "")</td>
                            </tr>
                                    }
                                    for (int i = prevNo + 1; i <= 7; i++)
                                    {
                            <tr>
                                <td class="text-center">@i</td>
                                <td class="text-center">
                                </td>
                                <td class="text-center"></td>
                            </tr>
                                    }
                                }
                            <tr>
                                <td colspan="5">
                                    Note:
                                    <textarea class="table-textarea" id="cancellation-notes" @(isCanEdit[13] ? "" : "disabled")>@Model.cancellation_notes</textarea>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
             <div class="row-fluid">
                <div class="span12">
                    @if (isCanEdit[0] || isCanEdit[6])
                    {
                        <input type="button" class="btn btn-success" value="Save and Complete" id="save-complete" data-state="@(isCanEdit[6] ? 1 : 0)" />
                        <input type="button" class="btn btn-default" value="Save as Draft" id="save-draft" data-state="@(isCanEdit[6] ? 1 : 0)" />
                    }

                    @if (isCanEdit[1])
                    {
                        <input type="button" class="btn btn-success" value="Save and Send to Inspect" id="save-inspect" />
                        <input type="button" class="btn btn-danger" value="Reject To Supervisor" id="reject-spv" />
                        <input type="button" class="btn btn-default" value="Save as Draft" id="save-draft-2" data-state="@(isCanEdit[6] ? 1 : 0)" />
                    }
                    @if (isCanEdit[7])
                    {
                        <input type="button" class="btn btn-success" value="Approve" id="approve-change" />
                        <input type="button" class="btn btn-danger" value="Reject" id="reject-change" />
                    }

                    @if (isCanEdit[8])
                    {
                        <input type="button" class="btn btn-success" value="Save and Send to Inspect" id="save-inspect-change" />
                    }

                    @if (isCanEdit[10] || isCanEdit[11] || isCanEdit[12])
                    {
                        <input type="button" class="btn btn-success" value="Save and Approve" id="save-approve-change" data-who="@(isCanEdit[10] ? 1 : (isCanEdit[11] ? 2 : (isCanEdit[12] ? 3 : 0)))" />
                    }
                    @if (isCanEdit[13])
                    {
                        <input type="button" class="btn btn-warning" value="Cancel LOTO" id="cancel-loto" />
                    }
                    @if (isCanEdit[14] || isCanEdit[15])
                    {
                        <input type="button" class="btn btn-success" value="Save and Sign Cancellation" id="sign-cancel-loto" data-who="@(isCanEdit[14] ? 1 : (isCanEdit[15] ? 2 : 0))" />
                    }
                    <input type="button" class="btn btn-primary" value="Back" id="back" />
                    <span id="loading" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span>
                </div>
            </div> 
        </div>
    </div> 
</div>


<!-- Modal -->
<div id="agreed" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Add" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="addLabel">LOTO Point Applied</h3>
  </div>
  <div class="modal-body">
    <form class="form-horizontal">
        <input type="hidden" id="point-id" value="0" />
        <div class="control-group">
            <label class="control-label" for="loto-point-agreed">Agreed</label>
            <div class="controls">
                <select id="loto-point-agreed">
                    <option value="">Select One</option>
                    @foreach (PermitToWork.Models.mst_loto_point lotoPoint in listLotoPoint)
                    {
                        <option value="@lotoPoint.code">@lotoPoint.description</option>
                    }
                </select>
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="applied-by">Applied By</label>
            <div class="controls">
                <select id="applied-by">
                    <option value="">Select One</option>
                    @foreach (PermitToWork.Models.User.UserEntity user in listUser)
                    {
                        <option value="@user.id">@user.alpha_name</option>
                    }
                </select>
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="applied-time">Applied Date Time</label>
            <div class="controls">
                <input id="applied-time">
            </div>
        </div>
    </form>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="save">Save</button>
  </div>
</div>

<!-- Modal -->
<div id="removed" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Add" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="removeLabel">LOTO Point Remove</h3>
  </div>
  <div class="modal-body">
    <form class="form-horizontal">
        <input type="hidden" id="r-point-id" value="0" />
        <div class="control-group">
            <label class="control-label" for="removed-by">Removed By</label>
            <div class="controls">
                <select id="removed-by">
                    <option value="">Select One</option>
                    @foreach (PermitToWork.Models.User.UserEntity user in listUser)
                    {
                        <option value="@user.id">@user.alpha_name</option>
                    }
                </select>
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="removed-time">Removed Date Time</label>
            <div class="controls">
                <input id="removed-time">
            </div>
        </div>
    </form>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="save-remove">Save</button>
  </div>
</div>

<!-- Modal -->
<div id="suspension-comment-modal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Add" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="request-suspension-modal-title">Suspension's Comment</h3>
  </div>
  <div class="modal-body">
    <form class="form-horizontal">
        <div class="control-group">
            <label class="control-label" for="removed-by">Comment: </label>
            <div class="controls">
                <textarea id="comment-suspension" row="5" />
            </div>
        </div>
    </form>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="save-comment-suspension">Save</button>
  </div>
</div>

<!-- Modal -->
<div id="reject-spv-modal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="Add" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="reject-spv-modal-title">Reject Comment</h3>
  </div>
  <div class="modal-body">
    <form class="form-horizontal">
        <div class="control-group">
            <label class="control-label" for="removed-by">Comment: </label>
            <div class="controls">
                <textarea id="comment-reject-spv" row="5" />
            </div>
        </div>
    </form>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button class="btn btn-primary" id="save-reject-spv">Save</button>
    <span id="reject-spv-loading" style="display:none"><img src="@Url.Content("~/Content/Images/loading.gif")" alt="loading" width="24" height="24" /> Sending Email.. Please Wait..</span>
  </div>
</div>

<script type="text/x-kendo-template" id="command-template">
    <div class="row-command">
    # if (is_set_empty != 1) { #
        # if('@isCanEdit[0]' == 'True') { #
            <a class="k-button k-button-icontext k-grid-edit" href="\#" title="Edit"><span class="k-icon k-edit"></span>Edit</a>
            <a class="k-button k-button-icontext k-grid-delete" href="\#" title="Delete"><span class="k-icon k-delete"></span>Delete</a>
        # } #
        # if ('@isCanEdit[1]' == 'True' || '@isCanEdit[8]' == 'True') { #
            <a class="k-button k-button-icontext k-grid-edit" href="\#" title="Set Agreed & Applied""><span class="k-icon k-edit"></span>set Agreed & Applied</a>
        #} #
        # if ('@(isCanEdit[2] || isCanEdit[20] || isCanEdit[26])' == 'True' && removed_by == null) { #
            <a class="k-button k-button-icontext k-grid-inspect" href="\#" title="Inspected & verified" onclick="event.preventDefault();setInspected(#= id #)"><span class="k-icon k-inspect"></span>Inspect & Verify</a>
        #} #
        # if('@isCanEdit[17]' == 'True') { #
            <a class="k-button k-button-icontext k-grid-edit" href="\#" title="Edit"><span class="k-icon k-edit"></span>Edit</a>
            # if (is_removed != null && is_removed == 1) { #
            <a class="k-button k-button-icontext k-grid-remove" href="\#" onclick="event.preventDefault();requestRemove(#= id #)" title="Request for Removal"><span class="k-icon k-remove"></span>Cancel Request for Removal</a>
            # } else { #
            <a class="k-button k-button-icontext k-grid-remove" href="\#" onclick="event.preventDefault();requestRemove(#= id #)" title="Request for Removal"><span class="k-icon k-remove"></span>Request for Removal</a>
            # } #
        # } #
        # if ('@isCanEdit[19]' == 'True' && (applied_by == null)) { #
            <a class="k-button k-button-icontext k-grid-edit" href="\#" title="Set Agreed & Applied""><span class="k-icon k-edit"></span>set Agreed & Applied</a>
        #} #
        # if (('@isCanEdit[19]' == 'True' && is_removed == 1 && removed_by == null) || ('@(Model.status == (int)PermitToWork.Models.ClearancePermit.LotoEntity.LOTOStatus.LOTOCANCELLED)' == 'True' && removed_by == null)) { #
            <a class="k-button k-button-icontext k-grid-remove" href="\#" title="Remove" onclick="event.preventDefault();removePoint(#= id #,'#= removed_by #','#= kendo.toString(removed_by_time,'MM/dd/yyyy hh:mm tt') #')"><span class="k-icon k-delete"></span>Remove</a>
        #} #
        # if('@isCanEdit[23]' == 'True' && applied_by == null) { #
            <a class="k-button k-button-icontext k-grid-edit" href="\#" title="Edit"><span class="k-icon k-edit"></span>Edit</a>
            <a class="k-button k-button-icontext k-grid-delete" href="\#" title="Delete"><span class="k-icon k-delete"></span>Delete</a>
        # } #
        # if('@isCanEdit[25]' == 'True' && applied_by == null) { #
            <a class="k-button k-button-icontext k-grid-edit" href="\#" title="Set Agreed & Applied""><span class="k-icon k-edit"></span>set Agreed & Applied</a>
        # } #
    # } #
    </div>
</script>
<script>
    $(document).ready(function () {
        addHandlerMenu();
        
        var dataSourceIn = new kendo.data.DataSource({
            transport: {
                read: {
                    url:  '@Url.Action("BindingLOTOPoint", "Loto", new { id_loto = Model.id })',
                    type: "POST"
                },
                create: {
                    url: '@Url.Action("AddLOTOPoint", "Loto", new { id_loto = Model.id })',
                    type: "POST",
                    complete: function (e) {
                        $("#grid-loto-point").data("kendoGrid").dataSource.read();
                    }
                },
                update: {
                    url: '@(isCanEdit[0] || isCanEdit[17] || (isCanEdit[23]) ? Url.Action("EditLOTOPoint", "Loto", new { id_loto = Model.id }) + "&is_change=" + (isCanEdit[17] ? 1 : 0) : Url.Action("SaveAgreedApplied","Loto"))',
                    type: "POST",
                    complete: function (e) {
                        $("#grid-loto-point").data("kendoGrid").dataSource.read();
                    }
                },
                destroy: {
                    url: '@Url.Action("DeleteLOTOPoint", "Loto", new { id_loto = Model.id })',
                    type: "POST",
                    complete: function (e) {
                        $("#grid-loto-point").data("kendoGrid").dataSource.read();
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        var result = {};

                        for (var i = 0; i < options.models.length; i++) {
                            var product = options.models[i];
                            console.log(product);
                            for (var member in product) {
                                if (member == "user") {
                                    result["id_user"] = product[member]["id"];
                                } else if (member == "applied_by") {
                                    if (typeof (product[member]) == typeof ({}) && product[member] != null) {
                                        result["applied_by"] = product[member]["id"];
                                    } else {
                                        result["applied_by"] = product[member];
                                    }
                                } else if (member == "loto_point_agreed") {
                                    if (typeof (product[member]) == typeof ({}) && product[member] != null) {
                                        result["loto_point_agreed"] = product[member]["code"];
                                    } else {
                                        result["loto_point_agreed"] = product[member];
                                    }
                                } else if (member == "applied_by_time") {
                                    var date = product[member];
                                    if (date != null) {
                                        result["applied_by_time"] = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes();
                                    }
                                } else {
                                    if (product[member] == null) {
                                        result[member] = "";
                                    } else {
                                        result[member] = product[member];
                                    }
                                }
                            }
                        }

                        return result;
                    }
                }
            },
            batch: true,
            pageSize: 30,
            schema: {
                model: {
                    id: "id",
                    fields: {
                        id: { type: "number", editable: false },
                        tag_id: { type: "string" @(isCanEdit[0] || isCanEdit[17] || isCanEdit[23] ? "" : ", editable: false") },
                        description: { type: "string" @(isCanEdit[0] || isCanEdit[17] || isCanEdit[23] ? "" : ", editable: false") },
                        drawing_number: { type: "string" @(isCanEdit[0] || isCanEdit[17] || isCanEdit[23] ? "" : ", editable: false") },
                        loto_point_proposed: { type: "string" @(isCanEdit[0] || isCanEdit[17] || isCanEdit[23] ? "" : ", editable: false") },
                        loto_point_agreed: { editable: true, nullable: true },
                        applied_by: { editable: true, nullable: true },
                        applied_by_time: { type: "date", editable: true, nullable: true, format: "{0:MM/dd/yyyy hh:mm tt}" },
                        inspected_1: { type: "string", editable: false, nullable: true },
                        inspected_2: { type: "string", editable: false, nullable: true },
                        inspected_3: { type: "string", editable: false, nullable: true },
                        inspected_4: { type: "string", editable: false, nullable: true },
                        inspected_5: { type: "string", editable: false, nullable: true },
                        inspected_6: { type: "string", editable: false, nullable: true },
                        inspected_7: { type: "string", editable: false, nullable: true },
                        inspected_7: { type: "string", editable: false, nullable: true },
                        removed_by: { type: "string", editable: false, nullable: true },
                        removed_by_time: { type: "date", editable: false, nullable: true },
                        remarks: { type: "string", nullable: true },
                        is_set_empty: { type: "number", nullable: true, editable: false },
                        is_removed: { nullable: true }
                    }
                }
            },
            pageSize: 10
        });

        $('#reject-spv').click(function () {
            $('#reject-spv-modal').modal('show');
        });

        $('#save-reject-spv').click(function () {
            var val = {
                id: '@Model.id',
                comment: $('#comment-reject-spv').val(),
            };
            $('#reject-spv-loading').css('display', 'inline-block');
            $.post('@Url.Action("RejectToSupervisor", "Loto")', val, function (resp) {
                $('#reject-spv-modal').modal('hide');
                $('#reject-spv-loading').hide();
                alert('LOTO Permit is rejected. Supervisor has been informed.');
                $('#content').load('@Url.Action("Edit", "Loto", new { id = Model.id })');
            });
        });

        $("#file-attachment").kendoUpload({
            async: {
                saveUrl: "@Url.Action("saveAttachmentLoto", "Loto")",
                removeUrl: "@Url.Action("removeAttachmentLoto", "Loto")",
                autoUpload: true,
            },
            upload: onUpload,
            remove: onRemove,
            success: onSuccessAttachment,
        });

        $fileList = $("#existing-files-attachment");

        if ($fileList.length > 0) {
            $("#file-attachment").parent().parent().parent('div.k-upload').append($fileList);
            $files = $(".k-file");
            _fn = function (item) {
                var $item, fileId, filenames;
                $item = $(item);
                fileId = $item.data("att-id");
                filenames = [
                  {
                      name: fileId
                  }
                ];
                return $item.data("fileNames", filenames);
            };
            for (_i = 0, _len = $files.length; _i < _len; _i++) {
                item = $files[_i];
                _fn(item);
            }
            $fileList.show();
        }

        function onUpload(e) {
            // Array with information about the uploaded files
            var files = e.files;

            // Check the extension of each file and abort the upload if it is not .pdf
            $.each(files, function () {
                if (this.extension != ".pdf") {
                    //alert("Only .pdf files can be uploaded.")
                    //e.preventDefault();
                }
            });
            e.data = { id: '@Model.id' };
        }

        function onRemove(e) {
            e.data = { id: '@Model.id' };
        }

        function onSuccessAttachment(e) {
            var files = e.files;
            // Check the extension of each file and abort the upload if it is not .jpg
            $.each(files, function () {
                $('.k-filename[title="' + this.name + '"]').html('<a href="@Url.Content("~/Upload/Loto/Attachment/" + Model.id)' + this.name + '">' + this.name + '</a>');
            });
        }

        @if (!(isCanEdit[0] || isCanEdit[6]))
        {
        <text>
        $('#file-attachment').data('kendoUpload').disable();
        </text>
        }

        $("#grid-loto-point").kendoGrid({
            dataSource: dataSourceIn,
            pageable: true,
            sortable: true,
            filterable: true,
            dataBound: onDataBound,
            @if (isCanEdit[0] || isCanEdit[17] || isCanEdit[23])
            { <text>toolbar: ["create"],</text> }
            columns: [
                {
                    template: kendo.template($("#command-template").html()), title: "Command", width: "200px"
                },
                //{ command: ["edit","delete"], title: "Command", width: "200px" },
                { field: "id", hidden : true },
                { field: "tag_id", title: "Tag ID", type: "string", width: 100 },
                { field: "description", title: "Description", type: "string", width: 250 },
                { field: "drawing_number", title: "Drawing(s) Number", type: "string", width: 175 },
                { field: "loto_point_proposed", title: "Isolated / LOTO point Position Proposed", type: "string", editor: proposedEditor, template: "#=getLOTOPoint(loto_point_proposed)#", width: 150 },
                { field: "loto_point_agreed", title: "Isolated / LOTO point Position Agreed", type: "string", editor: agreedEditor, template: "#=getLOTOPoint(loto_point_agreed)#", width: 150 },
                { field: "applied_by", title: "Applied by (name)", type: "string", editor: appliedEditor, template: "#=getAppliedName(applied_by)#", width: 175 },
                { field: "applied_by_time", title: "Applied Date / Time", type: "date", editor: appliedDateEditor, width: 200, format: "{0:MM/dd/yyyy hh:mm tt}" },
                { field: "inspected_1", title: "Inspected & Verified (1st)", type: "string", width: 75, template: "#=inspectedImage(inspected_1)#" },
                { field: "inspected_2", title: "Inspected & Verified (2nd)", type: "string", width: 75, template: "#=inspectedImage(inspected_2)#" },
                { field: "inspected_3", title: "Inspected & Verified (3rd)", type: "string", width: 75, template: "#=inspectedImage(inspected_3)#" },
                { field: "inspected_4", title: "Inspected & Verified (4th)", type: "string", width: 75, template: "#=inspectedImage(inspected_4)#" },
                { field: "inspected_5", title: "Inspected & Verified (5th)", type: "string", width: 75, template: "#=inspectedImage(inspected_5)#" },
                { field: "inspected_6", title: "Inspected & Verified (6th)", type: "string", width: 75, template: "#=inspectedImage(inspected_6)#" },
                { field: "inspected_7", title: "Inspected & Verified (7th)", type: "string", width: 75, template: "#=inspectedImage(inspected_7)#" },
                { field: "removed_by", title: "Removed (De-isolated) by (name)", type: "string", editor: removedEditor, template: "#=getAppliedName(removed_by)#", width: 175 },
                { field: "removed_by_time", title: "Removed (De-isolated) Date / Time", type: "date", editor: removedDateEditor, width: 125, format: "{0:MM/dd/yyyy hh:mm tt}" },
                { field: "remarks", title: "Remarks", type: "string", width: 200 },
                //{
                //    command: [
                //        {
                //            name: "Edit",
                //            click: editPtw
                //        },
                //        {
                //            template: kendo.template($("#extend-template").html()),
                //            name: "Extend",
                //            click: extendPtw
                //        },
                //    ],
                //    editable: {
                //        destroy: false
                //    },
                //    width: 180
                //}
            ],
            height: 400,
            editable: "inline",
            edit: function (e) {
                console.log(e.container.find('.row-command'));
                e.container.find('.row-command').html('<a class="k-button k-button-icontext k-grid-update" href="#" title="Update"><span class="k-icon k-update"></span>Update</a><a class="k-button k-button-icontext k-grid-cancel" href="#" title="Cancel"><span class="k-icon k-cancel"></span>Cancel</a>');
            }
        });

        function proposedEditor(container, options) {
            $('<input data-text-field="description" data-value-field="code" data-bind="value:' + options.field + '" @(isCanEdit[0] || isCanEdit[17] || isCanEdit[23] == true ? "" : "disabled")  />')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: true,
                    dataSource: {
                        transport: {
                            dataType: "json",
                            read: '@Url.Action("ListingLOTOPoint", "Loto")'
                        }
                    },
                    optionLabel: "--Select One--",
            });
        }

        function agreedEditor(container, options) {
            $('<input data-text-field="description" data-value-field="code" data-bind="value:' + options.field + '" @(isCanEdit[1] || isCanEdit[8] || isCanEdit[19] || isCanEdit[25] ? "" : "disabled") />')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: true,
                    dataSource: {
                        transport: {
                            dataType: "json",
                            read: '@Url.Action("ListingLOTOPoint", "Loto")'
                        }
                    },
                    optionLabel: "--Select One--",
                });
        }

        function appliedEditor(container, options) {
            $('<input data-text-field="alpha_name" data-value-field="id" data-bind="value:' + options.field + '" @(isCanEdit[1] || isCanEdit[8] || isCanEdit[19] || isCanEdit[25] ? "" : "disabled") />')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    dataSource: {
                        transport: {
                            dataType: "json",
                            read: '@Url.Action("ListingEmployee2", "Loto")'
                        }
                    },
                    optionLabel: "--Select One--",
                });
        }

        function appliedDateEditor(container, options) {
            var input = $("<input data-bind='value:" + options.field + "' @(isCanEdit[1] || isCanEdit[8] || isCanEdit[19] || isCanEdit[25] ? "" : "disabled") />");
            input.attr("name", options.field);
            input
                .appendTo(container)
                .kendoDateTimePicker({
                    format: "dd/MM/yyyy hh:mm tt"
                });
        }

        function removedEditor(container, options) {
            $('<input data-text-field="alpha_name" data-value-field="id" data-bind="value:' + options.field + '" disabled />')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: true,
                    dataSource: {
                        transport: {
                            dataType: "json",
                            read: '@Url.Action("ListingEmployee2", "Loto")'
                        }
                    },
                    optionLabel: "--Select One--",
                });
        }

        function onDataBound(e) {
            dataView = this.dataSource.view();
            for (var i in dataView) {
                if (dataView[i].is_set_empty == 1) {
                    var uid = dataView[i].uid;
                    var uid1 = dataView[i].bomc;
                    $("#grid-loto-point tbody").find("tr[data-uid=" + uid + "]").css("background-color", "lightblue");
                }

                if (dataView[i].is_removed == 1) {
                    var uid = dataView[i].uid;
                    var uid1 = dataView[i].bomc;
                    $("#grid-loto-point tbody").find("tr[data-uid=" + uid + "]").css("background-color", "pink");
                }
            }
        }

        function removedDateEditor(container, options) {
            var input = $("<input/>");
            input.attr("name", options.field);
            input
                .appendTo(container)
                .kendoDateTimePicker({
                    format: "dd/MM/yyyy hh:mm tt"
                });
        }

        $("#lock-box-no").kendoMultiSelect({
            placeholder: "Select Lock Box...",
            dataTextField: "no",
            dataValueField: "id",
            autoBind: false,
            select: onSelect,
            change: onChange,
            dataSource: {
                type: "json",
                serverFiltering: true,
                transport: {
                    read: {
                        url: "@Url.Action("LockBox", "Loto")",
                        type: "post"
                    }
                }
            },
        });

        function onSelect(e) {
            var dataItem = this.dataSource.view()[e.item.index()];
            console.log(e.item.index());
            console.log("event :: select (" + dataItem.text + " : " + dataItem.value + ")");
        };

        function onChange(e) {
            console.log($('#lock-box-no').val());
            var lock_arr = $('#lock-box-no').val();
            var value = "";
            for (var a in lock_arr) {
                value += lock_arr[a] + "#";
            }

            if (value.length > 0) {
                value = value.substring(0, value.length - 1);
            }

            $.post('@Url.Action("countQty", "Loto")', { value: value }, function (resp) {
                $('#initial-pad-lock').val(resp);
                var usage = $('#pad-lock-usage').val();
                var balance = parseInt(resp) - usage;
                $('#balance').val(balance);
            });
        }

        $('#pad-lock-usage').change(function () {
            var initial = $('#initial-pad-lock').val();
            var usage = $(this).val();
            var balance = initial - usage;
            $('#balance').val(balance);
        });

        $('#save-draft').click(function () {
            var values = {
                id: '@Model.id',
                work_location: $('#work-location').val(),
                lock_box_no: $('#lock-box-no').data('kendoMultiSelect').value().toString(),
                initial_pad_lock: $('#initial-pad-lock').val(),
                qty_pad_lock_usage: $('#pad-lock-usage').val(),
                balance: $('#balance').val(),
            }

            $.post('@Url.Action("SaveDraft", "Loto")', values, function (resp) {
                if (resp.status == "200") {
                    alert('Save success.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#save-draft-2').click(function () {
            var values = {
                id: '@Model.id',
                work_location: $('#work-location').val(),
                lock_box_no: $('#lock-box-no').data('kendoMultiSelect').value().toString(),
                initial_pad_lock: $('#initial-pad-lock').val(),
                qty_pad_lock_usage: $('#pad-lock-usage').val(),
                balance: $('#balance').val(),
            }

            $.post('@Url.Action("SaveDraft", "Loto")', values, function (resp) {
                if (resp.status == "200") {
                    alert('Save success.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#save-complete').click(function () {
            var values = {
                id: '@Model.id',
                work_location: $('#work-location').val(),
                lock_box_no: $('#lock-box-no').data('kendoMultiSelect').value().toString(),
                initial_pad_lock: $('#initial-pad-lock').val(),
                qty_pad_lock_usage: $('#pad-lock-usage').val(),
                balance: $('#balance').val(),
            }
            if ($('.k-grid-edit-row').length > 0) {
                alert('You have some point that hasn\'t been saved yet. Please click "Update" to save that point');
                return;
            }
            $('#loading').show();
            if ($(this).data('state') == 1) {
                $.post('@Url.Action("saveChangeApprove", "Loto")', values, function (resp) {
                    $('#loading').hide();
                    if (resp.status == "200") {
                        alert('Save success. Others Permit Holder has been informed to approve LOTO Point changed.');
                        $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                    }
                });
            } else {
                $.post('@Url.Action("SaveComplete", "Loto")', values, function (resp) {
                    $('#loading').hide();
                    if (resp.status == "200") {
                        alert('Save success. Facility Owner has been informed to choose agreed LOTO Point Position & apply it.');
                        $('#content').load('@Url.Action("Edit", "Loto")');
                    }
                });
            }
        });

        $('#save-inspect').click(function () {
            var values = {
                id: '@Model.id',
                work_location: $('#work-location').val(),
                lock_box_no: $('#lock-box-no').data('kendoMultiSelect').value().toString(),
                initial_pad_lock: $('#initial-pad-lock').val(),
                qty_pad_lock_usage: $('#pad-lock-usage').val(),
                balance: $('#balance').val(),
            }

            $('#loading').show();
            $.post('@Url.Action("SaveAndInspect", "Loto")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('Save success. Requestor has been informed to inspect and verify applied LOTO Point Position.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#save-approval').click(function () {
            var values = {
                id: '@Model.id'
            }

            $('#loading').show();
            $.post('@Url.Action("SaveAndSendApprove", "Loto")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('Save success. Supervisor has been informed to approve.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#save-approve').click(function () {
            var values = {
                id: '@Model.id',
                who: $(this).data('who'),
                approval_notes: $('#approval-notes').val(),
            }

            $('#loading').show();
            $.post('@Url.Action("SaveApprove", "Loto")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('LOTO Permit is approved.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#approve-coming-holder').click(function () {
            var values = {
                id: '@Model.id',
                approval_notes: $('#approval-notes').val(),
            }

            $('#loading').show();
            $.post('@Url.Action("SaveComingHolderApprove", "Loto")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('LOTO Permit is approved.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#change-point').click(function () {
            var values = {
                id: '@Model.id',
            }

            $.post('@Url.Action("requestLotoChange", "Loto")', values, function (resp) {
                if (resp.status == "200") {
                    alert('LOTO Permit is requested for changing.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#approve-change').click(function () {
            var values = {
                id: '@Model.id',
            }

            $('#loading').show();
            $.post('@Url.Action("HolderApproveChange", "Loto")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('LOTO Permit is approved.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#save-inspect-change').click(function () {
            var values = {
                id: '@Model.id'
            }

            $('#loading').show();
            $.post('@Url.Action("SaveAndInspectChange", "Loto")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('Save success. Requestor and others Permit Holder has been informed to inspect and verify applied LOTO Point Position.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#save-approve-change').click(function () {
            var values = {
                id: '@Model.id',
                who: $(this).data('who'),
                approval_notes: $('#approval-notes').val(),
            }

            $('#loading').show();
            $.post('@Url.Action("SaveApproveChange", "Loto")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('LOTO Permit is approved.');
                    $('#content').load('@Url.Action("Edit", "Loto")/' + values.id);
                }
            });
        });

        $('#request-suspension').click(function () {
            $('#comment-suspension').val('');
            $('#suspension-comment-modal').modal('show');
        });

        $('#save-comment-suspension').click(function () {
            var values = {
                id: '@Model.id',
                comment: $('#comment-suspension').val()
            }
            $.post('@Url.Action("RequestSuspension", "Loto")', values, function (resp) {
                alert('Suspension is requested. You may make changes on the LOTO Point then send for approval.');
                $('#suspension-comment-modal').modal('hide');
                $('#content').load('@Url.Action("Edit", "Loto")');
                $('#grid-loto-point').focus();
            });
        });

        $('#agree-suspension').click(function () {
            var values = {
                id: '@Model.id',
            }
            $.post('@Url.Action("AgreeSuspension", "Loto")', values, function (resp) {
                alert('Suspension is agreed.');
                $('#content').load('@Url.Action("Edit", "Loto")');
                $('#grid-loto-point').focus();
            });
        });

        $('#approval-suspension').click(function () {
            var values = {
                id: '@Model.id',
                notes: $('#suspension-notes').val(),
            }
            $.post('@Url.Action("SendApprovalSuspension", "Loto")', values, function (resp) {
                alert('All other\'s Holder has been informed to review and approve LOTO Suspension.\nIf all holder approved, Facility Owner will be informed to applied / removed requested LOTO Point changes.');
                $('#content').load('@Url.Action("Edit", "Loto")');
                $('.k-add').focus();
            });
        });

        $('#save-suspension').click(function () {
            var values = {
                id: '@Model.id',
                notes: $('#suspension-notes').val(),
            }
            $.post('@Url.Action("saveApprovalFOSuspension", "Loto")', values, function (resp) {
                alert('LOTO Holder has been informed to inspect LOTO Point.');
                $('#content').load('@Url.Action("Edit", "Loto")');
            });
        });

        $('#approve-suspension').click(function () {
            var values = {
                id: '@Model.id',
                notes: $('#suspension-notes').val(),
            }
            $.post('@Url.Action("approveSuspension", "Loto")', values, function (resp) {
                alert('Loto Permit Suspension is approved.');
                $('#content').load('@Url.Action("Edit", "Loto")');
            });
        });

        $('#approve-fo-suspension').click(function () {
            var values = {
                id: '@Model.id',
                notes: $('#suspension-notes').val(),
            }
            $.post('@Url.Action("approveFOSuspension", "Loto")', values, function (resp) {
                alert('Loto Permit Suspension is approved by Facility Owner.');
                $('#content').load('@Url.Action("Edit", "Loto")');
            });
        });

        $('#complete-suspension').click(function () {
            var values = {
                id: '@Model.id',
            }
            $.post('@Url.Action("completeSuspension", "Loto")', values, function (resp) {
                alert('Loto Permit Suspension is cancelled. You may add LOTO Point.');
                $('#content').load('@Url.Action("Edit", "Loto")');
                $('.k-add').focus();
            });
        });

        $('#send-complete-suspension').click(function () {
            var values = {
                id: '@Model.id',
            }
            $.post('@Url.Action("SendCompleteSuspension", "Loto")', values, function (resp) {
                alert('Loto Permit Suspension cancellation is sent to other holder.');
                $('#content').load('@Url.Action("Edit", "Loto")');
                $('.k-add').focus();
            });
        });

        $('#agree-complete-suspension').click(function () {
            var values = {
                id: '@Model.id',
            }
            $.post('@Url.Action("agreeCompleteSuspension", "Loto")', values, function (resp) {
                alert('Loto Permit Suspension Cancellation is agreed.');
                $('#content').load('@Url.Action("Edit", "Loto")');
                $('.k-add').focus();
            });
        });

        $('#send-inspect-complete-suspension').click(function () {
            var values = {
                id: '@Model.id',
            }
            $.post('@Url.Action("sendInspectCompleteSuspension", "Loto")', values, function (resp) {
                alert('Loto Permit Suspension Cancellation is sent to inspected by Holder.');
                $('#content').load('@Url.Action("Edit", "Loto")');
                $('.k-add').focus();
            });
        });

        $('#inspect-complete-suspension').click(function () {
            var values = {
                id: '@Model.id',
            }
            $.post('@Url.Action("inspectCompleteSuspension", "Loto")', values, function (resp) {
                alert('Loto Permit Suspension Cancellation is saved.');
                $('#content').load('@Url.Action("Edit", "Loto")');
                $('.k-add').focus();
            });
        });

        $('#cancel-loto').click(function () {
            var values = {
                id: '@Model.id',
                cancellation_notes: $('#cancellation-notes').val(),
                id_loto: $('#id_loto').val()
            }

            $('#loading').show();
            $.post('@Url.Action("HolderCancelLoto", "Loto")', values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('LOTO Permit is cancelled.');
                    $('#content').load('@Url.Action("Edit", "Loto")');
                }
            });
        });

        $('#sign-cancel-loto').click(function () {
            var values = {
                id: '@Model.id',
                cancellation_notes: $('#cancellation-notes').val(),
                id_loto: $('#id_loto').val()
            }

            var who = $(this).data('who');
            var url = '';
            if (who == 1) {
                url = '@Url.Action("SpvCancelLoto", "Loto")';
            } else if (who == 2) {
                url = '@Url.Action("FOCancelLoto", "Loto")';
            }

            $('#loading').show();
            $.post(url, values, function (resp) {
                $('#loading').hide();
                if (resp.status == "200") {
                    alert('LOTO Permit is cancelled.');
                    $('#content').load('@Url.Action("Edit", "Loto")');
                }
            });
        });

        $('#lock-box-no').data('kendoMultiSelect').dataSource.filter({});
        $('#lock-box-no').data('kendoMultiSelect').value($("#lock-box-hid").val().split(","));

        @if (!isCanEdit[1] && !isCanEdit[6])
        {
            <text>$('#lock-box-no').data('kendoMultiSelect').enable(false);</text>    
        }

        var start = $("#applied-time").kendoDateTimePicker({
            parseFormats: ["MM/dd/yyyy hh:mm tt"]
        }).data("kendoDateTimePicker");

        var start2 = $("#removed-time").kendoDateTimePicker({
            parseFormats: ["MM/dd/yyyy hh:mm tt"]
        }).data("kendoDateTimePicker");

        $('#save').click(function () {
            var values = {
                id: $('#point-id').val(),
                loto_point_agreed: $('#loto-point-agreed').val(),
                applied_by: $('#applied-by').val(),
                applied_by_time: $('#applied-time').val(),
            }

            $.post('@Url.Action("SaveAgreedApplied", "Loto")', values, function (resp) {
                $("#grid-loto-point").data("kendoGrid").dataSource.read();
                $('#agreed').modal('hide');
            });
        });

        $('#save-remove').click(function () {
            var values = {
                id: $('#r-point-id').val(),
                removed_by: $('#removed-by').val(),
                removed_by_time: $('#removed-time').val(),
            }

            $.post('@Url.Action("RemovePoint", "Loto")', values, function (resp) {
                $("#grid-loto-point").data("kendoGrid").dataSource.read();
                $('#removed').modal('hide');
            });
        });

        $('#back').click(function () {
            var his = $('#history').val();
            $('#history').val($('#prev-history').val());
            $('#content').load(his);
        });
    })

    function setAgreed(id, agreed, by, time) {
        $('#point-id').val(id);
        if (agreed != 'null') {
            $('#loto-point-agreed').val(agreed);
        } else {
            $('#loto-point-agreed').val('');
        }
        if (by != 'null') {
            $('#applied-by').val(by);
        } else {
            $('#applied-by').val('');
        }

        if (time != 'null') {
            $('#applied-time').val(time);
        } else {
            $('#applied-time').val('');
        }
        $('#agreed').modal('show');
    }

    function removePoint(id, by, time) {
        $('#r-point-id').val(id);
        if (by != 'null') {
            $('#removed-by').val(by);
        } else {
            $('#removed-by').val('');
        }

        if (time != 'null') {
            $('#removed-time').val(time);
        } else {
            $('#removed-time').val('');
        }
        $('#removed').modal('show');
    }

    function getLOTOPoint(a) {
        var res = "";
        if (a != null) {
            if (typeof (a) != typeof("a")) a = a.code;
            $.ajax({
                type: "POST",
                url: '@Url.Action("FindLotoPoint", "Loto")',
                async: false,
                data: { code : a},
                success: function (data) {
                    res = data;
                }
            });
        }
        return res;
    }

    function getAppliedName(a) {
        var res = "";
        if (a != null) {
            console.log(a);
            if (typeof (a) != typeof ("243")) a = a.id;
            $.ajax({
                type: "POST",
                url: '@Url.Action("FindEmployee", "Loto")',
                async: false,
                data: { employee_id: a },
                success: function (data) {
                    res = data;
                }
            });
        }
        return res;
    }

    function setInspected(id) {
        $.post('@Url.Action("saveInspectedVerified", "Loto")', { id: id, id_loto : '@Model.id', isChange : '@(isCanEdit[9] ? 1 : 0)' }, function (resp) {
            $("#grid-loto-point").data("kendoGrid").dataSource.read();
            $('#content').load('@Url.Action("Edit", "Loto")');
        });
    }

    function inspectedImage(url) {
        if (url != null) {
            return "<img src='" + url + "' width='25' height='25' />";
        }
        return "";
    }

    function requestRemove(id) {
        var values = {
            id: id,
        };
        $.post('@Url.Action("requestRemoval", "Loto")', values, function (resp) {
            $("#grid-loto-point").data("kendoGrid").dataSource.read();
        });
    }
</script>